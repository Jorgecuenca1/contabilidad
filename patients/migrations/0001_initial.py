# Generated by Django 5.1.4 on 2025-10-12 18:57

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0008_usercompanypermission_can_access_billing_health_and_more"),
        ("third_parties", "0004_thirdparty_birth_date_thirdparty_gender"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="EPS",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Código habilitación RIPS", max_length=20
                    ),
                ),
                ("nit", models.CharField(help_text="NIT de la EPS", max_length=20)),
                (
                    "name",
                    models.CharField(help_text="Nombre de la EPS", max_length=200),
                ),
                (
                    "regime",
                    models.CharField(
                        choices=[
                            ("contributivo", "Régimen Contributivo"),
                            ("subsidiado", "Régimen Subsidiado"),
                            ("especial", "Régimen Especial"),
                            ("excepcion", "Régimen de Excepción"),
                        ],
                        max_length=20,
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=50)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("address", models.CharField(blank=True, max_length=200)),
                ("city", models.CharField(blank=True, max_length=100)),
                (
                    "requires_authorization",
                    models.BooleanField(
                        default=True, help_text="Requiere autorización previa"
                    ),
                ),
                (
                    "max_days_authorization",
                    models.IntegerField(
                        default=15, help_text="Días máximos para autorizar"
                    ),
                ),
                (
                    "payment_term_days",
                    models.IntegerField(default=60, help_text="Plazo de pago en días"),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="eps_list",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="eps_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "EPS",
                "verbose_name_plural": "EPS",
                "db_table": "patients_eps",
                "ordering": ["name"],
                "unique_together": {("company", "code")},
            },
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "medical_record_number",
                    models.CharField(
                        help_text="Número de historia clínica único", max_length=50
                    ),
                ),
                (
                    "birth_municipality",
                    models.CharField(
                        blank=True, help_text="Municipio de nacimiento", max_length=100
                    ),
                ),
                (
                    "birth_department",
                    models.CharField(
                        blank=True,
                        help_text="Departamento de nacimiento",
                        max_length=100,
                    ),
                ),
                ("birth_country", models.CharField(default="Colombia", max_length=100)),
                (
                    "marital_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("soltero", "Soltero(a)"),
                            ("casado", "Casado(a)"),
                            ("union_libre", "Unión Libre"),
                            ("viudo", "Viudo(a)"),
                            ("divorciado", "Divorciado(a)"),
                            ("separado", "Separado(a)"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "education_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ninguno", "Ninguno"),
                            ("preescolar", "Preescolar"),
                            ("primaria", "Primaria"),
                            ("secundaria", "Secundaria"),
                            ("tecnico", "Técnico"),
                            ("tecnologo", "Tecnólogo"),
                            ("profesional", "Profesional"),
                            ("posgrado", "Posgrado"),
                        ],
                        max_length=20,
                    ),
                ),
                ("occupation", models.CharField(blank=True, max_length=200)),
                (
                    "ethnicity",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("mestizo", "Mestizo"),
                            ("indigena", "Indígena"),
                            ("afrodescendiente", "Afrodescendiente"),
                            ("rom", "ROM (Gitano)"),
                            ("raizal", "Raizal del Archipiélago"),
                            ("palenquero", "Palenquero"),
                            ("otro", "Otro"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "regime_type",
                    models.CharField(
                        choices=[
                            ("contributivo", "Régimen Contributivo"),
                            ("subsidiado", "Régimen Subsidiado"),
                            ("especial", "Régimen Especial"),
                            ("particular", "Particular"),
                            ("otro", "Otro"),
                        ],
                        default="contributivo",
                        max_length=20,
                    ),
                ),
                (
                    "insurance_number",
                    models.CharField(
                        blank=True,
                        help_text="Número de afiliación a EPS",
                        max_length=50,
                    ),
                ),
                (
                    "insurance_status",
                    models.CharField(
                        choices=[
                            ("activo", "Activo"),
                            ("suspendido", "Suspendido"),
                            ("retirado", "Retirado"),
                        ],
                        default="activo",
                        max_length=20,
                    ),
                ),
                ("has_prepaid_medicine", models.BooleanField(default=False)),
                ("prepaid_medicine_name", models.CharField(blank=True, max_length=200)),
                (
                    "prepaid_insurance_number",
                    models.CharField(blank=True, max_length=50),
                ),
                (
                    "blood_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("A+", "A Positivo"),
                            ("A-", "A Negativo"),
                            ("B+", "B Positivo"),
                            ("B-", "B Negativo"),
                            ("AB+", "AB Positivo"),
                            ("AB-", "AB Negativo"),
                            ("O+", "O Positivo"),
                            ("O-", "O Negativo"),
                        ],
                        max_length=3,
                    ),
                ),
                (
                    "rh_factor",
                    models.CharField(blank=True, help_text="Factor RH", max_length=10),
                ),
                (
                    "allergies",
                    models.TextField(
                        blank=True,
                        help_text="Alergias conocidas (medicamentos, alimentos, otros)",
                    ),
                ),
                (
                    "chronic_diseases",
                    models.TextField(blank=True, help_text="Enfermedades crónicas"),
                ),
                (
                    "disabilities",
                    models.TextField(blank=True, help_text="Discapacidades"),
                ),
                (
                    "family_history",
                    models.TextField(blank=True, help_text="Antecedentes familiares"),
                ),
                (
                    "surgical_history",
                    models.TextField(blank=True, help_text="Antecedentes quirúrgicos"),
                ),
                (
                    "traumatic_history",
                    models.TextField(blank=True, help_text="Antecedentes traumáticos"),
                ),
                (
                    "emergency_contact_name",
                    models.CharField(blank=True, max_length=200),
                ),
                (
                    "emergency_contact_relationship",
                    models.CharField(blank=True, max_length=100),
                ),
                (
                    "emergency_contact_phone",
                    models.CharField(blank=True, max_length=50),
                ),
                (
                    "emergency_contact_phone2",
                    models.CharField(blank=True, max_length=50),
                ),
                ("has_responsible", models.BooleanField(default=False)),
                ("responsible_name", models.CharField(blank=True, max_length=200)),
                (
                    "responsible_document_type",
                    models.CharField(blank=True, max_length=10),
                ),
                (
                    "responsible_document_number",
                    models.CharField(blank=True, max_length=20),
                ),
                (
                    "responsible_relationship",
                    models.CharField(blank=True, max_length=100),
                ),
                ("responsible_phone", models.CharField(blank=True, max_length=50)),
                (
                    "informed_consent_signed",
                    models.BooleanField(
                        default=False, help_text="Consentimiento informado firmado"
                    ),
                ),
                ("informed_consent_date", models.DateField(blank=True, null=True)),
                (
                    "data_treatment_authorized",
                    models.BooleanField(
                        default=False,
                        help_text="Autorización tratamiento datos (Habeas Data)",
                    ),
                ),
                ("data_treatment_date", models.DateField(blank=True, null=True)),
                (
                    "photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="patients/photos/%Y/%m/"
                    ),
                ),
                (
                    "registration_date",
                    models.DateField(default=django.utils.timezone.now),
                ),
                ("last_visit_date", models.DateField(blank=True, null=True)),
                ("total_visits", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deceased", models.BooleanField(default=False)),
                ("deceased_date", models.DateField(blank=True, null=True)),
                ("deceased_cause", models.TextField(blank=True)),
                (
                    "notes",
                    models.TextField(blank=True, help_text="Observaciones generales"),
                ),
                (
                    "internal_notes",
                    models.TextField(
                        blank=True, help_text="Notas internas (no visibles en historia)"
                    ),
                ),
                (
                    "duplicate_check_hash",
                    models.CharField(
                        blank=True,
                        help_text="Hash para detectar duplicados",
                        max_length=64,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="patients",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="patients_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "eps",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="patients",
                        to="patients.eps",
                    ),
                ),
                (
                    "third_party",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="general_patient_profile",
                        to="third_parties.thirdparty",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="patients_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Paciente",
                "verbose_name_plural": "Pacientes",
                "db_table": "patients",
                "ordering": ["-last_visit_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PatientDocument",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("consent", "Consentimiento Informado"),
                            ("authorization", "Autorización Tratamiento Datos"),
                            ("id_copy", "Copia Documento Identidad"),
                            ("eps_card", "Carnet EPS"),
                            ("medical_order", "Orden Médica Externa"),
                            ("lab_result", "Resultado Laboratorio Externo"),
                            ("imaging", "Imagen Diagnóstica Externa"),
                            ("other", "Otro"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("file", models.FileField(upload_to="patients/documents/%Y/%m/")),
                ("file_size", models.PositiveIntegerField(blank=True, null=True)),
                ("issue_date", models.DateField(default=django.utils.timezone.now)),
                ("expiry_date", models.DateField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="patients.patient",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Documento del Paciente",
                "verbose_name_plural": "Documentos del Paciente",
                "db_table": "patients_documents",
                "ordering": ["-uploaded_at"],
            },
        ),
        migrations.CreateModel(
            name="PatientInsuranceHistory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "regime_type",
                    models.CharField(
                        choices=[
                            ("contributivo", "Régimen Contributivo"),
                            ("subsidiado", "Régimen Subsidiado"),
                            ("especial", "Régimen Especial"),
                            ("particular", "Particular"),
                            ("otro", "Otro"),
                        ],
                        max_length=20,
                    ),
                ),
                ("insurance_number", models.CharField(max_length=50)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("is_current", models.BooleanField(default=True)),
                ("change_reason", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "eps",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="patients.eps"
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="insurance_history",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "Historial de Aseguramiento",
                "verbose_name_plural": "Historiales de Aseguramiento",
                "db_table": "patients_insurance_history",
                "ordering": ["-start_date"],
            },
        ),
        migrations.AddIndex(
            model_name="patient",
            index=models.Index(
                fields=["company", "medical_record_number"],
                name="patients_company_227a70_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="patient",
            index=models.Index(
                fields=["company", "is_active"], name="patients_company_5edc2b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patient",
            index=models.Index(
                fields=["eps", "is_active"], name="patients_eps_id_d49f9f_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="patient",
            unique_together={("company", "medical_record_number")},
        ),
    ]
