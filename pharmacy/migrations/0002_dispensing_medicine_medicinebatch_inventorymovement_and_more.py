# Generated by Django 5.1.4 on 2025-10-15 17:09

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0008_usercompanypermission_can_access_billing_health_and_more"),
        ("pharmacy", "0001_initial"),
        ("third_parties", "0004_thirdparty_birth_date_thirdparty_gender"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Dispensing",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("dispensing_number", models.CharField(max_length=100, unique=True)),
                (
                    "dispensing_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("prescription_required", models.BooleanField(default=True)),
                ("prescription_number", models.CharField(blank=True, max_length=100)),
                ("prescription_date", models.DateField(blank=True, null=True)),
                ("prescribing_physician", models.CharField(blank=True, max_length=200)),
                ("physician_license", models.CharField(blank=True, max_length=100)),
                ("diagnosis", models.CharField(blank=True, max_length=500)),
                (
                    "service_type",
                    models.CharField(
                        blank=True,
                        help_text="Ambulatorio, Hospitalización, Urgencias",
                        max_length=50,
                    ),
                ),
                (
                    "authorization_number",
                    models.CharField(
                        blank=True,
                        help_text="Número de autorización de la EPS",
                        max_length=100,
                    ),
                ),
                (
                    "subtotal",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                (
                    "copayment",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Copago del paciente",
                        max_digits=15,
                    ),
                ),
                (
                    "moderator_fee",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Cuota moderadora",
                        max_digits=15,
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendiente"),
                            ("prepared", "Preparada"),
                            ("delivered", "Entregada"),
                            ("cancelled", "Anulada"),
                            ("returned", "Devuelta"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("delivery_date", models.DateTimeField(blank=True, null=True)),
                (
                    "received_by_name",
                    models.CharField(
                        blank=True, help_text="Nombre de quien recibe", max_length=200
                    ),
                ),
                (
                    "received_by_id",
                    models.CharField(
                        blank=True,
                        help_text="Identificación de quien recibe",
                        max_length=50,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                (
                    "pharmacist_notes",
                    models.TextField(
                        blank=True, help_text="Recomendaciones del farmacéutico"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="dispensings_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "delivered_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="dispensings_delivered",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="pharmacy_dispensings",
                        to="third_parties.thirdparty",
                    ),
                ),
                (
                    "payer",
                    models.ForeignKey(
                        blank=True,
                        help_text="EPS o pagador",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="pharmacy_payer_dispensings",
                        to="third_parties.thirdparty",
                    ),
                ),
            ],
            options={
                "verbose_name": "Dispensación",
                "verbose_name_plural": "Dispensaciones",
                "db_table": "pharmacy_dispensings",
                "ordering": ["-dispensing_date"],
            },
        ),
        migrations.CreateModel(
            name="Medicine",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("code", models.CharField(help_text="Código interno", max_length=50)),
                (
                    "cum_code",
                    models.CharField(
                        blank=True,
                        help_text="Código Único de Medicamento - INVIMA",
                        max_length=20,
                    ),
                ),
                (
                    "atc_code",
                    models.CharField(blank=True, help_text="Código ATC", max_length=20),
                ),
                (
                    "barcode",
                    models.CharField(
                        blank=True, help_text="Código de barras", max_length=50
                    ),
                ),
                (
                    "generic_name",
                    models.CharField(help_text="Nombre genérico (DCI)", max_length=300),
                ),
                (
                    "commercial_name",
                    models.CharField(
                        blank=True, help_text="Nombre comercial", max_length=300
                    ),
                ),
                (
                    "active_ingredient",
                    models.TextField(help_text="Principio activo y concentración"),
                ),
                (
                    "pharmaceutical_form",
                    models.CharField(
                        choices=[
                            ("tablet", "Tableta"),
                            ("capsule", "Cápsula"),
                            ("syrup", "Jarabe"),
                            ("suspension", "Suspensión"),
                            ("solution", "Solución"),
                            ("injection", "Inyectable"),
                            ("cream", "Crema"),
                            ("ointment", "Ungüento"),
                            ("drops", "Gotas"),
                            ("spray", "Spray"),
                            ("inhaler", "Inhalador"),
                            ("suppository", "Supositorio"),
                            ("patch", "Parche"),
                            ("powder", "Polvo"),
                            ("gel", "Gel"),
                            ("lotion", "Loción"),
                            ("other", "Otro"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "administration_route",
                    models.CharField(
                        choices=[
                            ("oral", "Oral"),
                            ("sublingual", "Sublingual"),
                            ("intravenous", "Intravenosa"),
                            ("intramuscular", "Intramuscular"),
                            ("subcutaneous", "Subcutánea"),
                            ("topical", "Tópica"),
                            ("transdermal", "Transdérmica"),
                            ("ophthalmic", "Oftálmica"),
                            ("otic", "Ótica"),
                            ("nasal", "Nasal"),
                            ("rectal", "Rectal"),
                            ("vaginal", "Vaginal"),
                            ("inhalation", "Inhalatoria"),
                            ("other", "Otra"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "control_type",
                    models.CharField(
                        choices=[
                            ("otc", "Venta Libre"),
                            ("prescription", "Fórmula Médica"),
                            ("controlled", "Medicamento Controlado"),
                            ("high_surveillance", "Alta Vigilancia"),
                            ("pos", "POS"),
                            ("no_pos", "No POS"),
                        ],
                        default="prescription",
                        max_length=20,
                    ),
                ),
                (
                    "concentration",
                    models.CharField(help_text="Ej: 500mg, 10mg/ml", max_length=100),
                ),
                (
                    "presentation",
                    models.CharField(
                        help_text="Ej: Caja x 30 tabletas", max_length=200
                    ),
                ),
                ("manufacturer", models.CharField(blank=True, max_length=200)),
                (
                    "sanitary_registration",
                    models.CharField(
                        blank=True,
                        help_text="Registro Sanitario INVIMA",
                        max_length=100,
                    ),
                ),
                ("therapeutic_indications", models.TextField(blank=True)),
                ("contraindications", models.TextField(blank=True)),
                ("adverse_effects", models.TextField(blank=True)),
                (
                    "dosage_instructions",
                    models.TextField(
                        blank=True, help_text="Instrucciones de dosificación"
                    ),
                ),
                ("requires_refrigeration", models.BooleanField(default=False)),
                ("requires_special_storage", models.BooleanField(default=False)),
                ("storage_conditions", models.TextField(blank=True)),
                (
                    "minimum_stock",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "maximum_stock",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "reorder_point",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "unit_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Costo unitario",
                        max_digits=15,
                    ),
                ),
                (
                    "sale_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Precio de venta",
                        max_digits=15,
                    ),
                ),
                (
                    "pos_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        help_text="Precio POS",
                        max_digits=15,
                        null=True,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_generic", models.BooleanField(default=False)),
                (
                    "is_essential",
                    models.BooleanField(
                        default=False, help_text="Medicamento esencial"
                    ),
                ),
                (
                    "is_high_risk",
                    models.BooleanField(
                        default=False, help_text="Medicamento de alto riesgo"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="medicines",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="medicines_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="medicines_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Medicamento",
                "verbose_name_plural": "Medicamentos",
                "db_table": "pharmacy_medicines",
                "ordering": ["generic_name"],
            },
        ),
        migrations.CreateModel(
            name="MedicineBatch",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "batch_number",
                    models.CharField(
                        help_text="Número de lote del fabricante", max_length=100
                    ),
                ),
                (
                    "internal_code",
                    models.CharField(
                        blank=True, help_text="Código interno del lote", max_length=50
                    ),
                ),
                (
                    "manufacturing_date",
                    models.DateField(help_text="Fecha de fabricación"),
                ),
                ("expiry_date", models.DateField(help_text="Fecha de vencimiento")),
                (
                    "reception_date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        help_text="Fecha de recepción",
                    ),
                ),
                (
                    "initial_quantity",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "current_quantity",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "reserved_quantity",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "unit_cost",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Costo unitario del lote",
                        max_digits=15,
                    ),
                ),
                (
                    "total_cost",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Costo total del lote",
                        max_digits=15,
                    ),
                ),
                ("supplier", models.CharField(blank=True, max_length=200)),
                ("purchase_order", models.CharField(blank=True, max_length=100)),
                ("invoice_number", models.CharField(blank=True, max_length=100)),
                (
                    "storage_location",
                    models.CharField(
                        blank=True,
                        help_text="Ubicación física en bodega",
                        max_length=200,
                    ),
                ),
                ("quality_approved", models.BooleanField(default=True)),
                ("quality_notes", models.TextField(blank=True)),
                ("quality_approved_date", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_quarantine",
                    models.BooleanField(default=False, help_text="En cuarentena"),
                ),
                ("quarantine_reason", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="batches_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "medicine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="batches",
                        to="pharmacy.medicine",
                    ),
                ),
                (
                    "quality_approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="batches_approved",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Lote de Medicamento",
                "verbose_name_plural": "Lotes de Medicamentos",
                "db_table": "pharmacy_medicine_batches",
                "ordering": ["expiry_date", "batch_number"],
            },
        ),
        migrations.CreateModel(
            name="InventoryMovement",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("movement_number", models.CharField(max_length=100, unique=True)),
                (
                    "movement_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "movement_type",
                    models.CharField(
                        choices=[
                            ("entry", "Entrada"),
                            ("exit", "Salida"),
                            ("adjustment", "Ajuste"),
                            ("transfer", "Traslado"),
                            ("return", "Devolución"),
                            ("expiry", "Vencimiento"),
                            ("damage", "Daño/Avería"),
                        ],
                        max_length=20,
                    ),
                ),
                ("quantity", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "previous_quantity",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Cantidad antes del movimiento",
                        max_digits=10,
                    ),
                ),
                (
                    "new_quantity",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Cantidad después del movimiento",
                        max_digits=10,
                    ),
                ),
                (
                    "reference_document",
                    models.CharField(
                        blank=True, help_text="Factura, remisión, etc.", max_length=200
                    ),
                ),
                ("reason", models.TextField(blank=True)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="inventory_movements_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "dispensing",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="inventory_movements",
                        to="pharmacy.dispensing",
                    ),
                ),
                (
                    "medicine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="movements",
                        to="pharmacy.medicine",
                    ),
                ),
                (
                    "batch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="movements",
                        to="pharmacy.medicinebatch",
                    ),
                ),
            ],
            options={
                "verbose_name": "Movimiento de Inventario",
                "verbose_name_plural": "Movimientos de Inventario",
                "db_table": "pharmacy_inventory_movements",
                "ordering": ["-movement_date"],
            },
        ),
        migrations.CreateModel(
            name="DispensingItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                ("unit_price", models.DecimalField(decimal_places=2, max_digits=15)),
                ("subtotal", models.DecimalField(decimal_places=2, max_digits=15)),
                (
                    "discount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                ("total", models.DecimalField(decimal_places=2, max_digits=15)),
                (
                    "dosage_instructions",
                    models.TextField(blank=True, help_text="Posología"),
                ),
                (
                    "administration_instructions",
                    models.TextField(
                        blank=True, help_text="Instrucciones de administración"
                    ),
                ),
                (
                    "duration_days",
                    models.IntegerField(
                        blank=True,
                        help_text="Duración del tratamiento en días",
                        null=True,
                    ),
                ),
                (
                    "is_substitution",
                    models.BooleanField(
                        default=False, help_text="Indica si es sustitución por genérico"
                    ),
                ),
                ("substitution_reason", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "dispensing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="pharmacy.dispensing",
                    ),
                ),
                (
                    "medicine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="pharmacy.medicine",
                    ),
                ),
                (
                    "batch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="dispensing_items",
                        to="pharmacy.medicinebatch",
                    ),
                ),
            ],
            options={
                "verbose_name": "Item de Dispensación",
                "verbose_name_plural": "Items de Dispensación",
                "db_table": "pharmacy_dispensing_items",
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="MedicineCategory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "code",
                    models.CharField(help_text="Código ATC o interno", max_length=20),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "category_type",
                    models.CharField(
                        choices=[
                            ("therapeutic", "Terapéutica"),
                            ("anatomical", "Anatómica"),
                            ("chemical", "Química"),
                            ("pharmacological", "Farmacológica"),
                        ],
                        default="therapeutic",
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="pharmacy_categories_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategories",
                        to="pharmacy.medicinecategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Categoría de Medicamento",
                "verbose_name_plural": "Categorías de Medicamentos",
                "db_table": "pharmacy_medicine_categories",
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="medicine",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="medicines",
                to="pharmacy.medicinecategory",
            ),
        ),
        migrations.CreateModel(
            name="StockAlert",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("low_stock", "Stock Bajo"),
                            ("out_of_stock", "Sin Stock"),
                            ("near_expiry", "Próximo a Vencer"),
                            ("expired", "Vencido"),
                            ("overstock", "Sobre Stock"),
                            ("batch_quarantine", "Lote en Cuarentena"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Baja"),
                            ("medium", "Media"),
                            ("high", "Alta"),
                            ("critical", "Crítica"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                ("message", models.TextField()),
                (
                    "current_quantity",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("expiry_date", models.DateField(blank=True, null=True)),
                ("is_resolved", models.BooleanField(default=False)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("resolution_notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "batch",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alerts",
                        to="pharmacy.medicinebatch",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "medicine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alerts",
                        to="pharmacy.medicine",
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="alerts_resolved",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Alerta de Stock",
                "verbose_name_plural": "Alertas de Stock",
                "db_table": "pharmacy_stock_alerts",
                "ordering": ["-priority", "-created_at"],
            },
        ),
        migrations.DeleteModel(
            name="PharmacyModule",
        ),
        migrations.AddIndex(
            model_name="dispensing",
            index=models.Index(
                fields=["company", "dispensing_date"],
                name="pharmacy_di_company_d722a7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="dispensing",
            index=models.Index(
                fields=["dispensing_number"], name="pharmacy_di_dispens_ddf1d0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dispensing",
            index=models.Index(
                fields=["patient"], name="pharmacy_di_patient_0cc40a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dispensing",
            index=models.Index(fields=["status"], name="pharmacy_di_status_f40784_idx"),
        ),
        migrations.AddIndex(
            model_name="medicinebatch",
            index=models.Index(
                fields=["company", "medicine", "expiry_date"],
                name="pharmacy_me_company_c4d03f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="medicinebatch",
            index=models.Index(
                fields=["batch_number"], name="pharmacy_me_batch_n_bdedb9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="medicinebatch",
            index=models.Index(
                fields=["expiry_date"], name="pharmacy_me_expiry__221054_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="medicinebatch",
            unique_together={("company", "medicine", "batch_number")},
        ),
        migrations.AddIndex(
            model_name="inventorymovement",
            index=models.Index(
                fields=["company", "movement_date"],
                name="pharmacy_in_company_71da98_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="inventorymovement",
            index=models.Index(
                fields=["medicine"], name="pharmacy_in_medicin_a7a6ef_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventorymovement",
            index=models.Index(fields=["batch"], name="pharmacy_in_batch_i_24cbb8_idx"),
        ),
        migrations.AddIndex(
            model_name="inventorymovement",
            index=models.Index(
                fields=["movement_type"], name="pharmacy_in_movemen_15514f_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="medicinecategory",
            unique_together={("company", "code")},
        ),
        migrations.AddIndex(
            model_name="medicine",
            index=models.Index(
                fields=["company", "code"], name="pharmacy_me_company_208696_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="medicine",
            index=models.Index(
                fields=["company", "generic_name"],
                name="pharmacy_me_company_1df4e7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="medicine",
            index=models.Index(
                fields=["barcode"], name="pharmacy_me_barcode_0f0570_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="medicine",
            index=models.Index(
                fields=["cum_code"], name="pharmacy_me_cum_cod_e6611c_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="medicine",
            unique_together={("company", "code")},
        ),
        migrations.AddIndex(
            model_name="stockalert",
            index=models.Index(
                fields=["company", "is_resolved"], name="pharmacy_st_company_de0e58_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="stockalert",
            index=models.Index(
                fields=["alert_type", "priority"], name="pharmacy_st_alert_t_223238_idx"
            ),
        ),
    ]
