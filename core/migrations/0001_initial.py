# Generated by Django 4.2.21 on 2025-08-28 05:07

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('admin', 'Administrador del Sistema'), ('contador_general', 'Contador General'), ('auxiliar_contable', 'Auxiliar Contable'), ('tesorero', 'Tesorero'), ('jefe_nomina', 'Jefe de Nómina'), ('auditor', 'Auditor'), ('cliente', 'Cliente/Proveedor')], default='auxiliar_contable', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('document_type', models.CharField(default='CC', max_length=10)),
                ('document_number', models.CharField(max_length=20, unique=True)),
                ('is_active_2fa', models.BooleanField(default=False)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'core_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('legal_name', models.CharField(max_length=200)),
                ('tax_id', models.CharField(help_text='NIT/RUC', max_length=20, unique=True)),
                ('tax_id_dv', models.CharField(blank=True, help_text='Dígito de verificación', max_length=2)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('website', models.URLField(blank=True)),
                ('regime', models.CharField(choices=[('simplified', 'Régimen Simplificado'), ('common', 'Régimen Común'), ('special', 'Régimen Especial'), ('public', 'Sector Público')], max_length=20)),
                ('sector', models.CharField(choices=[('private', 'Sector Privado'), ('public', 'Sector Público'), ('mixed', 'Economía Mixta')], default='private', max_length=20)),
                ('functional_currency', models.CharField(default='COP', max_length=3)),
                ('fiscal_year_start', models.DateField(help_text='Inicio del año fiscal')),
                ('fiscal_year_end', models.DateField(help_text='Fin del año fiscal')),
                ('legal_representative', models.CharField(max_length=200)),
                ('legal_rep_document', models.CharField(max_length=20)),
                ('logo', models.ImageField(blank=True, upload_to='company_logos/')),
                ('is_active', models.BooleanField(default=True)),
                ('settings', models.JSONField(default=dict, help_text='Configuraciones específicas de la empresa')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Empresa',
                'verbose_name_plural': 'Empresas',
                'db_table': 'core_companies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('code', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('currency_code', models.CharField(max_length=3)),
                ('currency_symbol', models.CharField(max_length=5)),
                ('tax_id_regex', models.CharField(help_text='Regex para validar NIT/RUC', max_length=100)),
                ('chart_of_accounts_template', models.TextField(blank=True, help_text='Template JSON del plan de cuentas')),
                ('tax_configuration', models.JSONField(default=dict, help_text='Configuración de impuestos del país')),
            ],
            options={
                'verbose_name': 'País',
                'verbose_name_plural': 'Países',
                'db_table': 'core_countries',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('code', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('symbol', models.CharField(max_length=5)),
                ('decimal_places', models.IntegerField(default=2)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Moneda',
                'verbose_name_plural': 'Monedas',
                'db_table': 'core_currencies',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='FiscalYear',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('year', models.IntegerField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('open', 'Abierto'), ('closed', 'Cerrado'), ('locked', 'Bloqueado')], default='open', max_length=10)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('closed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fiscal_years', to='core.company')),
            ],
            options={
                'verbose_name': 'Año Fiscal',
                'verbose_name_plural': 'Años Fiscales',
                'db_table': 'core_fiscal_years',
                'ordering': ['-year'],
                'unique_together': {('company', 'year')},
            },
        ),
        migrations.CreateModel(
            name='UserCompanyPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_level', models.CharField(choices=[('read', 'Solo Lectura'), ('write', 'Lectura y Escritura'), ('approve', 'Aprobar'), ('admin', 'Administrador')], max_length=10)),
                ('can_access_accounting', models.BooleanField(default=False)),
                ('can_access_receivables', models.BooleanField(default=False)),
                ('can_access_payables', models.BooleanField(default=False)),
                ('can_access_treasury', models.BooleanField(default=False)),
                ('can_access_inventory', models.BooleanField(default=False)),
                ('can_access_fixed_assets', models.BooleanField(default=False)),
                ('can_access_payroll', models.BooleanField(default=False)),
                ('can_access_taxes', models.BooleanField(default=False)),
                ('can_access_reports', models.BooleanField(default=False)),
                ('can_access_public_sector', models.BooleanField(default=False)),
                ('cost_centers', models.JSONField(default=list, help_text='Centros de costo permitidos')),
                ('max_amount_approval', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Permiso Usuario-Empresa',
                'verbose_name_plural': 'Permisos Usuario-Empresa',
                'db_table': 'core_user_company_permissions',
                'unique_together': {('user', 'company')},
            },
        ),
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True)),
                ('value', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Configuración del Sistema',
                'verbose_name_plural': 'Configuraciones del Sistema',
                'db_table': 'core_system_configurations',
                'ordering': ['key'],
            },
        ),
        migrations.AddField(
            model_name='company',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.country'),
        ),
        migrations.AddField(
            model_name='company',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='companies_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='companies',
            field=models.ManyToManyField(blank=True, through='core.UserCompanyPermission', to='core.company'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('month', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('open', 'Abierto'), ('closed', 'Cerrado'), ('locked', 'Bloqueado')], default='open', max_length=10)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('closed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('fiscal_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='periods', to='core.fiscalyear')),
            ],
            options={
                'verbose_name': 'Período',
                'verbose_name_plural': 'Períodos',
                'db_table': 'core_periods',
                'ordering': ['-fiscal_year__year', '-month'],
                'unique_together': {('fiscal_year', 'month')},
            },
        ),
        migrations.CreateModel(
            name='ExchangeRate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('rate', models.DecimalField(decimal_places=6, max_digits=15)),
                ('rate_type', models.CharField(choices=[('official', 'Oficial'), ('market', 'Mercado'), ('custom', 'Personalizada')], default='official', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exchange_rates', to='core.company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('from_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rates_from', to='core.currency')),
                ('to_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rates_to', to='core.currency')),
            ],
            options={
                'verbose_name': 'Tipo de Cambio',
                'verbose_name_plural': 'Tipos de Cambio',
                'db_table': 'core_exchange_rates',
                'ordering': ['-date'],
                'unique_together': {('company', 'from_currency', 'to_currency', 'date', 'rate_type')},
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('create', 'Crear'), ('update', 'Actualizar'), ('delete', 'Eliminar'), ('login', 'Inicio de Sesión'), ('logout', 'Cierre de Sesión'), ('approve', 'Aprobar'), ('reject', 'Rechazar'), ('post', 'Contabilizar'), ('reverse', 'Reversar')], max_length=20)),
                ('model_name', models.CharField(max_length=100)),
                ('object_id', models.CharField(max_length=100)),
                ('object_repr', models.CharField(max_length=200)),
                ('changes', models.JSONField(default=dict, help_text='Cambios realizados')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('hash_value', models.CharField(editable=False, max_length=64)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='core.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Log de Auditoría',
                'verbose_name_plural': 'Logs de Auditoría',
                'db_table': 'core_audit_logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['company', 'timestamp'], name='core_audit__company_9e1876_idx'), models.Index(fields=['user', 'timestamp'], name='core_audit__user_id_607f52_idx'), models.Index(fields=['model_name', 'object_id'], name='core_audit__model_n_49efcd_idx')],
            },
        ),
    ]
