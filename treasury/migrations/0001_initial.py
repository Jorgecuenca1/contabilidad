# Generated by Django 4.2.21 on 2025-08-28 05:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounting', '0001_initial'),
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('code', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('statement_format', models.CharField(default='csv', help_text='Formato de extractos', max_length=20)),
                ('date_format', models.CharField(default='%Y-%m-%d', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Banco',
                'verbose_name_plural': 'Bancos',
                'db_table': 'treasury_banks',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=200)),
                ('account_number', models.CharField(max_length=50)),
                ('account_type', models.CharField(choices=[('checking', 'Cuenta Corriente'), ('savings', 'Cuenta de Ahorros'), ('credit', 'Línea de Crédito'), ('investment', 'Cuenta de Inversión'), ('payroll', 'Cuenta de Nómina')], max_length=20)),
                ('opening_balance', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('current_balance', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('overdraft_limit', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('daily_limit', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('status', models.CharField(choices=[('active', 'Activa'), ('inactive', 'Inactiva'), ('closed', 'Cerrada'), ('blocked', 'Bloqueada')], default='active', max_length=20)),
                ('auto_reconcile', models.BooleanField(default=False)),
                ('reconcile_tolerance', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('accounting_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bank_accounts', to='accounting.account')),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='treasury.bank')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to='core.company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bank_accounts_created', to=settings.AUTH_USER_MODEL)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.currency')),
            ],
            options={
                'verbose_name': 'Cuenta Bancaria',
                'verbose_name_plural': 'Cuentas Bancarias',
                'db_table': 'treasury_bank_accounts',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='CashAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=200)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('opening_balance', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('current_balance', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('max_balance', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('status', models.CharField(choices=[('active', 'Activa'), ('inactive', 'Inactiva'), ('closed', 'Cerrada')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('accounting_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cash_accounts', to='accounting.account')),
                ('cashier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_cash_accounts', to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cash_accounts', to='core.company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cash_accounts_created', to=settings.AUTH_USER_MODEL)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.currency')),
            ],
            options={
                'verbose_name': 'Cuenta de Caja',
                'verbose_name_plural': 'Cuentas de Caja',
                'db_table': 'treasury_cash_accounts',
                'ordering': ['code'],
                'unique_together': {('company', 'code')},
            },
        ),
        migrations.CreateModel(
            name='CashMovement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('number', models.CharField(max_length=20)),
                ('movement_type', models.CharField(choices=[('receipt', 'Recibo de Caja'), ('disbursement', 'Egreso de Caja')], max_length=20)),
                ('date', models.DateField()),
                ('third_party_name', models.CharField(max_length=200)),
                ('third_party_document', models.CharField(blank=True, max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('concept', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Borrador'), ('confirmed', 'Confirmado'), ('cancelled', 'Anulado')], default='draft', max_length=20)),
                ('is_posted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cash_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='movements', to='treasury.cashaccount')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cash_movements', to='core.company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cash_movements_created', to=settings.AUTH_USER_MODEL)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.currency')),
            ],
            options={
                'verbose_name': 'Movimiento de Caja',
                'verbose_name_plural': 'Movimientos de Caja',
                'db_table': 'treasury_cash_movements',
                'ordering': ['-date', '-number'],
                'indexes': [models.Index(fields=['company', 'date'], name='treasury_ca_company_28612c_idx'), models.Index(fields=['cash_account'], name='treasury_ca_cash_ac_dbee1a_idx'), models.Index(fields=['status'], name='treasury_ca_status_e12f42_idx')],
                'unique_together': {('company', 'number')},
            },
        ),
        migrations.CreateModel(
            name='CashFlow',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('flow_type', models.CharField(choices=[('projected', 'Proyectado'), ('actual', 'Real')], max_length=20)),
                ('category', models.CharField(choices=[('operating', 'Operativo'), ('investing', 'Inversión'), ('financing', 'Financiamiento')], max_length=20)),
                ('concept', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('inflow', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('outflow', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('net_flow', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('date', models.DateField()),
                ('reference_document', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cash_flows', to='core.company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.currency')),
                ('period', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.period')),
            ],
            options={
                'verbose_name': 'Flujo de Caja',
                'verbose_name_plural': 'Flujos de Caja',
                'db_table': 'treasury_cash_flows',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['company', 'period'], name='treasury_ca_company_9d5ee9_idx'), models.Index(fields=['flow_type', 'category'], name='treasury_ca_flow_ty_1bfad1_idx'), models.Index(fields=['date'], name='treasury_ca_date_cdbb16_idx')],
            },
        ),
        migrations.CreateModel(
            name='BankReconciliation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('number', models.CharField(max_length=20)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('book_balance', models.DecimalField(decimal_places=2, default=0, help_text='Saldo según libros', max_digits=15)),
                ('bank_balance', models.DecimalField(decimal_places=2, default=0, help_text='Saldo según banco', max_digits=15)),
                ('deposits_in_transit', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('outstanding_checks', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('bank_charges', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('interest_earned', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('other_adjustments', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('reconciled_balance', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('difference', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('status', models.CharField(choices=[('draft', 'Borrador'), ('in_progress', 'En Proceso'), ('completed', 'Completada'), ('approved', 'Aprobada')], default='draft', max_length=20)),
                ('approved_date', models.DateTimeField(blank=True, null=True)),
                ('bank_statement', models.FileField(blank=True, upload_to='reconciliations/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_reconciliations', to=settings.AUTH_USER_MODEL)),
                ('bank_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reconciliations', to='treasury.bankaccount')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_reconciliations', to='core.company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reconciliations_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Conciliación Bancaria',
                'verbose_name_plural': 'Conciliaciones Bancarias',
                'db_table': 'treasury_bank_reconciliations',
                'ordering': ['-period_end'],
                'indexes': [models.Index(fields=['company', 'period_end'], name='treasury_ba_company_24eb6f_idx'), models.Index(fields=['bank_account'], name='treasury_ba_bank_ac_8b4e88_idx'), models.Index(fields=['status'], name='treasury_ba_status_7515e1_idx')],
                'unique_together': {('company', 'number')},
            },
        ),
        migrations.CreateModel(
            name='BankMovement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_id', models.CharField(blank=True, max_length=50)),
                ('reference', models.CharField(blank=True, max_length=100)),
                ('date', models.DateField()),
                ('value_date', models.DateField()),
                ('movement_type', models.CharField(choices=[('debit', 'Débito'), ('credit', 'Crédito')], max_length=10)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('balance', models.DecimalField(decimal_places=2, help_text='Saldo después del movimiento', max_digits=15)),
                ('description', models.CharField(max_length=200)),
                ('concept', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('reconciled', 'Conciliado'), ('disputed', 'En Disputa'), ('cancelled', 'Anulado')], default='pending', max_length=20)),
                ('reconciled_date', models.DateTimeField(blank=True, null=True)),
                ('imported_from', models.CharField(blank=True, help_text='Fuente de importación', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bank_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='treasury.bankaccount')),
                ('reconciled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reconciled_movements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Movimiento Bancario',
                'verbose_name_plural': 'Movimientos Bancarios',
                'db_table': 'treasury_bank_movements',
                'ordering': ['-date', '-created_at'],
                'indexes': [models.Index(fields=['bank_account', 'date'], name='treasury_ba_bank_ac_f83ba6_idx'), models.Index(fields=['status'], name='treasury_ba_status_432ffb_idx'), models.Index(fields=['transaction_id'], name='treasury_ba_transac_62def5_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='bankaccount',
            index=models.Index(fields=['company', 'bank'], name='treasury_ba_company_8a76b9_idx'),
        ),
        migrations.AddIndex(
            model_name='bankaccount',
            index=models.Index(fields=['account_number'], name='treasury_ba_account_a9d7e7_idx'),
        ),
        migrations.AddIndex(
            model_name='bankaccount',
            index=models.Index(fields=['status'], name='treasury_ba_status_5c1e2c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='bankaccount',
            unique_together={('company', 'code')},
        ),
    ]
