# Generated by Django 5.1.4 on 2025-10-15 18:08

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0008_usercompanypermission_can_access_billing_health_and_more"),
        ("imaging", "0001_initial"),
        ("patients", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ImagingModality",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Código DICOM de modalidad", max_length=10
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "modality_type",
                    models.CharField(
                        choices=[
                            ("RX", "Radiografía"),
                            ("CT", "Tomografía Computarizada (TAC)"),
                            ("MR", "Resonancia Magnética"),
                            ("US", "Ecografía/Ultrasonido"),
                            ("MG", "Mamografía"),
                            ("NM", "Medicina Nuclear"),
                            ("PT", "PET"),
                            ("XA", "Angiografía"),
                            ("DX", "Radiografía Digital"),
                            ("CR", "Radiografía Computarizada"),
                            ("FL", "Fluoroscopia"),
                            ("BI", "Biopsia Guiada por Imagen"),
                            ("DG", "Densitometría Ósea"),
                        ],
                        max_length=5,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "requires_contrast",
                    models.BooleanField(
                        default=False, help_text="Requiere medio de contraste"
                    ),
                ),
                (
                    "requires_sedation",
                    models.BooleanField(
                        default=False, help_text="Puede requerir sedación"
                    ),
                ),
                (
                    "requires_fasting",
                    models.BooleanField(default=False, help_text="Requiere ayuno"),
                ),
                (
                    "preparation_instructions",
                    models.TextField(
                        blank=True, help_text="Instrucciones de preparación"
                    ),
                ),
                (
                    "average_duration_minutes",
                    models.IntegerField(
                        default=30, help_text="Duración promedio en minutos"
                    ),
                ),
                (
                    "base_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="imaging_modalities",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="modalities_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Modalidad de Imagen",
                "verbose_name_plural": "Modalidades de Imágenes",
                "db_table": "imaging_modality",
                "ordering": ["name"],
                "unique_together": {("company", "code")},
            },
        ),
        migrations.CreateModel(
            name="ImagingEquipment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Código interno del equipo", max_length=50
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "manufacturer",
                    models.CharField(
                        blank=True, help_text="Fabricante", max_length=200
                    ),
                ),
                ("model", models.CharField(blank=True, max_length=200)),
                ("serial_number", models.CharField(blank=True, max_length=200)),
                ("installation_date", models.DateField(blank=True, null=True)),
                (
                    "room_location",
                    models.CharField(
                        help_text="Sala donde está ubicado", max_length=100
                    ),
                ),
                ("building", models.CharField(blank=True, max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("operational", "Operacional"),
                            ("maintenance", "En Mantenimiento"),
                            ("calibration", "En Calibración"),
                            ("out_of_service", "Fuera de Servicio"),
                        ],
                        default="operational",
                        max_length=20,
                    ),
                ),
                ("last_maintenance_date", models.DateField(blank=True, null=True)),
                ("next_maintenance_date", models.DateField(blank=True, null=True)),
                (
                    "dicom_ae_title",
                    models.CharField(
                        blank=True, help_text="AE Title DICOM", max_length=16
                    ),
                ),
                (
                    "dicom_ip_address",
                    models.GenericIPAddressField(blank=True, null=True),
                ),
                ("dicom_port", models.IntegerField(blank=True, default=104, null=True)),
                ("observations", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="imaging_equipment",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="equipment_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modality",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="equipment",
                        to="imaging.imagingmodality",
                    ),
                ),
            ],
            options={
                "verbose_name": "Equipo de Imagen",
                "verbose_name_plural": "Equipos de Imágenes",
                "db_table": "imaging_equipment",
                "ordering": ["name"],
                "unique_together": {("company", "code")},
            },
        ),
        migrations.CreateModel(
            name="ImagingOrder",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "order_number",
                    models.CharField(
                        help_text="Número único de orden", max_length=50, unique=True
                    ),
                ),
                (
                    "procedure_description",
                    models.TextField(
                        help_text="Descripción del procedimiento solicitado"
                    ),
                ),
                (
                    "anatomical_region",
                    models.CharField(
                        help_text="Región anatómica a estudiar", max_length=200
                    ),
                ),
                (
                    "clinical_indication",
                    models.TextField(
                        help_text="Indicación clínica / Motivo del estudio"
                    ),
                ),
                (
                    "clinical_history",
                    models.TextField(
                        blank=True, help_text="Historia clínica relevante"
                    ),
                ),
                (
                    "previous_studies",
                    models.TextField(
                        blank=True, help_text="Estudios previos relevantes"
                    ),
                ),
                (
                    "ordering_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("routine", "Rutina"),
                            ("urgent", "Urgente"),
                            ("stat", "STAT (Inmediato)"),
                        ],
                        default="routine",
                        max_length=10,
                    ),
                ),
                ("scheduled_date", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendiente"),
                            ("scheduled", "Agendada"),
                            ("in_progress", "En Proceso"),
                            ("completed", "Completada"),
                            ("reported", "Informada"),
                            ("delivered", "Entregada"),
                            ("cancelled", "Cancelada"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("has_allergies", models.BooleanField(default=False)),
                ("allergies_description", models.TextField(blank=True)),
                ("has_contraindications", models.BooleanField(default=False)),
                ("contraindications_description", models.TextField(blank=True)),
                ("informed_consent_signed", models.BooleanField(default=False)),
                ("consent_signed_date", models.DateTimeField(blank=True, null=True)),
                ("is_billed", models.BooleanField(default=False)),
                (
                    "total_cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("observations", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="imaging_orders",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="imaging_orders_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modality",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders",
                        to="imaging.imagingmodality",
                    ),
                ),
                (
                    "ordering_physician",
                    models.ForeignKey(
                        help_text="Médico que solicita el estudio",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="imaging_orders_requested",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="imaging_orders",
                        to="patients.patient",
                    ),
                ),
                (
                    "scheduled_equipment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="scheduled_orders",
                        to="imaging.imagingequipment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Orden de Imagen",
                "verbose_name_plural": "Órdenes de Imágenes",
                "db_table": "imaging_order",
                "ordering": ["-ordering_date"],
            },
        ),
        migrations.CreateModel(
            name="ImagingStudy",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "study_number",
                    models.CharField(
                        help_text="Número del estudio", max_length=50, unique=True
                    ),
                ),
                ("study_date", models.DateTimeField(default=django.utils.timezone.now)),
                ("contrast_used", models.BooleanField(default=False)),
                ("contrast_type", models.CharField(blank=True, max_length=200)),
                (
                    "contrast_volume_ml",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                ("sedation_used", models.BooleanField(default=False)),
                ("sedation_type", models.CharField(blank=True, max_length=200)),
                (
                    "kvp",
                    models.IntegerField(
                        blank=True, help_text="Kilovoltaje pico (para RX/CT)", null=True
                    ),
                ),
                (
                    "mas",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Miliamperios-segundo",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "slice_thickness_mm",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Grosor de corte en mm (para CT/MR)",
                        max_digits=5,
                        null=True,
                    ),
                ),
                ("number_of_images", models.IntegerField(default=0)),
                ("number_of_series", models.IntegerField(default=1)),
                (
                    "study_instance_uid",
                    models.CharField(
                        blank=True, help_text="UID del estudio DICOM", max_length=200
                    ),
                ),
                (
                    "dicom_stored",
                    models.BooleanField(
                        default=False, help_text="Imágenes almacenadas en PACS"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("in_progress", "En Proceso"),
                            ("completed", "Completado"),
                            ("cancelled", "Cancelado"),
                            ("failed", "Fallido"),
                        ],
                        default="in_progress",
                        max_length=20,
                    ),
                ),
                ("completion_date", models.DateTimeField(blank=True, null=True)),
                (
                    "technical_notes",
                    models.TextField(
                        blank=True, help_text="Notas técnicas del tecnólogo"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="imaging_studies",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="studies_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "equipment_used",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="studies",
                        to="imaging.imagingequipment",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="studies",
                        to="imaging.imagingorder",
                    ),
                ),
                (
                    "performing_technologist",
                    models.ForeignKey(
                        help_text="Tecnólogo que realiza el estudio",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="studies_performed",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "radiologist_assigned",
                    models.ForeignKey(
                        blank=True,
                        help_text="Radiólogo asignado",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="studies_to_read",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Estudio de Imagen",
                "verbose_name_plural": "Estudios de Imágenes",
                "db_table": "imaging_study",
                "ordering": ["-study_date"],
            },
        ),
        migrations.CreateModel(
            name="ImagingReport",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("report_number", models.CharField(max_length=50, unique=True)),
                (
                    "report_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("technique", models.TextField(help_text="Técnica utilizada")),
                ("findings", models.TextField(help_text="Hallazgos")),
                ("impression", models.TextField(help_text="Impresión / Conclusión")),
                (
                    "recommendations",
                    models.TextField(blank=True, help_text="Recomendaciones"),
                ),
                (
                    "is_normal",
                    models.BooleanField(default=False, help_text="Estudio normal"),
                ),
                (
                    "is_critical",
                    models.BooleanField(default=False, help_text="Hallazgos críticos"),
                ),
                ("critical_finding_notified", models.BooleanField(default=False)),
                ("notification_date", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Borrador"),
                            ("preliminary", "Preliminar"),
                            ("final", "Final"),
                            ("amended", "Enmendado"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("finalized_date", models.DateTimeField(blank=True, null=True)),
                ("digitally_signed", models.BooleanField(default=False)),
                ("signature_date", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="imaging_reports",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="reports_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "radiologist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="radiology_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "transcribed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reports_transcribed",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "study",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="report",
                        to="imaging.imagingstudy",
                    ),
                ),
            ],
            options={
                "verbose_name": "Informe Radiológico",
                "verbose_name_plural": "Informes Radiológicos",
                "db_table": "imaging_report",
                "ordering": ["-report_date"],
            },
        ),
        migrations.CreateModel(
            name="ImagingImage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("series_number", models.IntegerField(default=1)),
                ("instance_number", models.IntegerField(default=1)),
                (
                    "image_type",
                    models.CharField(
                        choices=[
                            ("dicom", "DICOM"),
                            ("jpeg", "JPEG"),
                            ("png", "PNG"),
                            ("pdf", "PDF"),
                        ],
                        default="dicom",
                        max_length=10,
                    ),
                ),
                (
                    "file_path",
                    models.CharField(
                        help_text="Ruta del archivo en el servidor", max_length=500
                    ),
                ),
                ("file_size_bytes", models.BigIntegerField(default=0)),
                ("sop_instance_uid", models.CharField(blank=True, max_length=200)),
                ("series_instance_uid", models.CharField(blank=True, max_length=200)),
                ("acquisition_date", models.DateTimeField(blank=True, null=True)),
                ("image_description", models.CharField(blank=True, max_length=200)),
                ("thumbnail_path", models.CharField(blank=True, max_length=500)),
                (
                    "is_key_image",
                    models.BooleanField(
                        default=False, help_text="Imagen clave para el informe"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "study",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="imaging.imagingstudy",
                    ),
                ),
            ],
            options={
                "verbose_name": "Imagen",
                "verbose_name_plural": "Imágenes",
                "db_table": "imaging_image",
                "ordering": ["series_number", "instance_number"],
            },
        ),
        migrations.CreateModel(
            name="QualityControlCheck",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("check_date", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "check_type",
                    models.CharField(
                        choices=[
                            ("daily", "Control Diario"),
                            ("weekly", "Control Semanal"),
                            ("monthly", "Control Mensual"),
                            ("annual", "Control Anual"),
                            ("maintenance", "Post-Mantenimiento"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "result",
                    models.CharField(
                        choices=[
                            ("passed", "Aprobado"),
                            ("failed", "Fallido"),
                            ("warning", "Advertencia"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "measurements",
                    models.TextField(help_text="Mediciones y valores obtenidos"),
                ),
                ("observations", models.TextField(blank=True)),
                (
                    "corrective_actions",
                    models.TextField(
                        blank=True, help_text="Acciones correctivas tomadas"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "equipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quality_checks",
                        to="imaging.imagingequipment",
                    ),
                ),
                (
                    "performed_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="qc_checks_performed",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Control de Calidad",
                "verbose_name_plural": "Controles de Calidad",
                "db_table": "imaging_quality_control",
                "ordering": ["-check_date"],
            },
        ),
        migrations.DeleteModel(
            name="ImagingModule",
        ),
    ]
