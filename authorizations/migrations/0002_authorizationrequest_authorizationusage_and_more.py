# Generated by Django 5.1.4 on 2025-10-13 16:33

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("authorizations", "0001_initial"),
        ("core", "0008_usercompanypermission_can_access_billing_health_and_more"),
        ("medical_records", "0001_initial"),
        ("patients", "0001_initial"),
        ("payroll", "0003_laboratoryspecialty_alter_healthcarerole_category_and_more"),
        ("third_parties", "0004_thirdparty_birth_date_thirdparty_gender"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AuthorizationRequest",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("authorization_number", models.CharField(max_length=50, unique=True)),
                (
                    "service_type",
                    models.CharField(
                        choices=[
                            ("consultation", "Consulta"),
                            ("procedure", "Procedimiento"),
                            ("surgery", "Cirugía"),
                            ("hospitalization", "Hospitalización"),
                            ("imaging", "Imagenología"),
                            ("laboratory", "Laboratorio"),
                            ("medication", "Medicamentos"),
                            ("therapy", "Terapia"),
                            ("other", "Otro"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "cups_code",
                    models.CharField(
                        blank=True,
                        help_text="Código CUPS del procedimiento",
                        max_length=20,
                    ),
                ),
                (
                    "service_description",
                    models.TextField(help_text="Descripción del servicio solicitado"),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "diagnosis_code",
                    models.CharField(help_text="Código CIE-10", max_length=10),
                ),
                ("diagnosis_description", models.CharField(max_length=500)),
                (
                    "medical_justification",
                    models.TextField(help_text="Justificación médica de la solicitud"),
                ),
                ("clinical_history_summary", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Borrador"),
                            ("submitted", "Enviada"),
                            ("under_review", "En Revisión"),
                            ("approved", "Aprobada"),
                            ("partial_approved", "Aprobada Parcialmente"),
                            ("denied", "Negada"),
                            ("cancelled", "Cancelada"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Baja"),
                            ("normal", "Normal"),
                            ("high", "Alta"),
                            ("urgent", "Urgente"),
                        ],
                        default="normal",
                        max_length=10,
                    ),
                ),
                (
                    "request_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("submission_date", models.DateTimeField(blank=True, null=True)),
                ("response_date", models.DateTimeField(blank=True, null=True)),
                ("expiration_date", models.DateField(blank=True, null=True)),
                ("eps_response", models.TextField(blank=True)),
                (
                    "eps_authorization_number",
                    models.CharField(blank=True, max_length=100),
                ),
                ("approved_quantity", models.IntegerField(blank=True, null=True)),
                ("denial_reason", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="auth_requests_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "eps",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="authorization_requests",
                        to="patients.eps",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        limit_choices_to={"is_patient": True, "type": "customer"},
                        on_delete=django.db.models.deletion.PROTECT,
                        to="third_parties.thirdparty",
                    ),
                ),
                (
                    "requesting_physician",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="authorization_requests",
                        to="payroll.employee",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="auth_requests_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Solicitud de Autorización",
                "verbose_name_plural": "Solicitudes de Autorización",
                "db_table": "authorizations_requests",
                "ordering": ["-request_date"],
            },
        ),
        migrations.CreateModel(
            name="AuthorizationUsage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("usage_date", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "quantity_used",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "authorization_request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="usage_records",
                        to="authorizations.authorizationrequest",
                    ),
                ),
                (
                    "consultation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="medical_records.consultation",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "medical_record",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="medical_records.medicalrecord",
                    ),
                ),
            ],
            options={
                "verbose_name": "Uso de Autorización",
                "verbose_name_plural": "Usos de Autorizaciones",
                "db_table": "authorizations_usage",
                "ordering": ["-usage_date"],
            },
        ),
        migrations.CreateModel(
            name="CounterReferral",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "counter_referral_number",
                    models.CharField(max_length=50, unique=True),
                ),
                (
                    "service_date",
                    models.DateField(help_text="Fecha en que se prestó el servicio"),
                ),
                (
                    "services_provided",
                    models.TextField(
                        help_text="Descripción de los servicios prestados"
                    ),
                ),
                (
                    "treatment_results",
                    models.TextField(help_text="Resultados del tratamiento"),
                ),
                (
                    "patient_evolution",
                    models.TextField(blank=True, help_text="Evolución del paciente"),
                ),
                (
                    "final_diagnosis",
                    models.CharField(help_text="Diagnóstico final", max_length=500),
                ),
                (
                    "recommendations",
                    models.TextField(
                        help_text="Recomendaciones para el médico tratante"
                    ),
                ),
                ("requires_followup", models.BooleanField(default=False)),
                ("followup_instructions", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendiente"),
                            ("sent", "Enviada"),
                            ("received", "Recibida por EPS"),
                            ("closed", "Cerrada"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "creation_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("sent_date", models.DateTimeField(blank=True, null=True)),
                ("received_date", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "authorization_request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="counter_referrals",
                        to="authorizations.authorizationrequest",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="counter_refs_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "eps",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="patients.eps"
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        limit_choices_to={"is_patient": True, "type": "customer"},
                        on_delete=django.db.models.deletion.PROTECT,
                        to="third_parties.thirdparty",
                    ),
                ),
                (
                    "referring_physician",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="counter_referrals",
                        to="payroll.employee",
                    ),
                ),
            ],
            options={
                "verbose_name": "Contrarreferencia",
                "verbose_name_plural": "Contrarreferencias",
                "db_table": "authorizations_counter_referrals",
                "ordering": ["-creation_date"],
            },
        ),
        migrations.CreateModel(
            name="AuthorizationAttachment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("medical_order", "Orden Médica"),
                            ("clinical_history", "Historia Clínica"),
                            ("lab_results", "Resultados de Laboratorio"),
                            ("imaging", "Imágenes Diagnósticas"),
                            ("consent", "Consentimiento Informado"),
                            ("eps_response", "Respuesta EPS"),
                            ("other", "Otro"),
                        ],
                        max_length=30,
                    ),
                ),
                ("file", models.FileField(upload_to="authorizations/%Y/%m/")),
                ("file_size", models.PositiveIntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "authorization_request",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="authorizations.authorizationrequest",
                    ),
                ),
                (
                    "counter_referral",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="authorizations.counterreferral",
                    ),
                ),
            ],
            options={
                "verbose_name": "Documento Adjunto",
                "verbose_name_plural": "Documentos Adjuntos",
                "db_table": "authorizations_attachments",
                "ordering": ["-created_at"],
            },
        ),
        migrations.DeleteModel(
            name="AuthorizationsModule",
        ),
    ]
