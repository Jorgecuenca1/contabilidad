# Generated by Django 5.1.4 on 2025-10-15 21:52

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0008_usercompanypermission_can_access_billing_health_and_more"),
        ("emergency", "0001_initial"),
        ("patients", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="EmergencyAdmission",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "admission_number",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Número de Admisión"
                    ),
                ),
                (
                    "admission_datetime",
                    models.DateTimeField(verbose_name="Fecha y Hora de Admisión"),
                ),
                (
                    "attention_start_datetime",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Inicio de Atención"
                    ),
                ),
                (
                    "attention_end_datetime",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fin de Atención"
                    ),
                ),
                (
                    "emergency_area",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Área de Urgencias"
                    ),
                ),
                (
                    "bed_number",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Número de Camilla/Cama"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("waiting", "En Espera"),
                            ("in_attention", "En Atención"),
                            ("observation", "En Observación"),
                            ("discharged", "Alta"),
                            ("hospitalized", "Hospitalizado"),
                            ("transferred", "Trasladado"),
                            ("deceased", "Fallecido"),
                            ("left_without_attention", "Salió sin Atención"),
                        ],
                        default="waiting",
                        max_length=30,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "insurance_company",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Aseguradora/EPS"
                    ),
                ),
                (
                    "authorization_number",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Número de Autorización",
                    ),
                ),
                (
                    "requires_authorization",
                    models.BooleanField(
                        default=False, verbose_name="Requiere Autorización"
                    ),
                ),
                (
                    "admission_notes",
                    models.TextField(blank=True, verbose_name="Notas de Admisión"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_nurse",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="emergency_admissions_as_nurse",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Enfermera Asignada",
                    ),
                ),
                (
                    "attending_physician",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="emergency_admissions_as_physician",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Médico Tratante",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="emergency_admissions",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="emergency_admissions_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="emergency_admissions",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "Admisión de Urgencias",
                "verbose_name_plural": "Admisiones de Urgencias",
                "db_table": "emergency_admission",
                "ordering": ["-admission_datetime"],
            },
        ),
        migrations.CreateModel(
            name="EmergencyAttention",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "attention_number",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Número de Atención"
                    ),
                ),
                (
                    "attention_date",
                    models.DateTimeField(verbose_name="Fecha de Atención"),
                ),
                ("current_illness", models.TextField(verbose_name="Enfermedad Actual")),
                (
                    "review_of_systems",
                    models.TextField(blank=True, verbose_name="Revisión por Sistemas"),
                ),
                (
                    "personal_history",
                    models.TextField(
                        blank=True, verbose_name="Antecedentes Personales"
                    ),
                ),
                (
                    "family_history",
                    models.TextField(
                        blank=True, verbose_name="Antecedentes Familiares"
                    ),
                ),
                ("allergies", models.TextField(blank=True, verbose_name="Alergias")),
                (
                    "current_medications",
                    models.TextField(blank=True, verbose_name="Medicamentos Actuales"),
                ),
                (
                    "general_appearance",
                    models.TextField(blank=True, verbose_name="Apariencia General"),
                ),
                (
                    "physical_examination",
                    models.TextField(verbose_name="Examen Físico"),
                ),
                (
                    "cardiovascular_exam",
                    models.TextField(blank=True, verbose_name="Examen Cardiovascular"),
                ),
                (
                    "respiratory_exam",
                    models.TextField(blank=True, verbose_name="Examen Respiratorio"),
                ),
                (
                    "abdominal_exam",
                    models.TextField(blank=True, verbose_name="Examen Abdominal"),
                ),
                (
                    "neurological_exam",
                    models.TextField(blank=True, verbose_name="Examen Neurológico"),
                ),
                ("diagnosis", models.TextField(verbose_name="Diagnóstico")),
                (
                    "differential_diagnosis",
                    models.TextField(
                        blank=True, verbose_name="Diagnóstico Diferencial"
                    ),
                ),
                (
                    "treatment_plan",
                    models.TextField(verbose_name="Plan de Tratamiento"),
                ),
                (
                    "medications_prescribed",
                    models.TextField(
                        blank=True, verbose_name="Medicamentos Prescritos"
                    ),
                ),
                (
                    "procedures_indicated",
                    models.TextField(
                        blank=True, verbose_name="Procedimientos Indicados"
                    ),
                ),
                (
                    "lab_tests_ordered",
                    models.TextField(
                        blank=True, verbose_name="Laboratorios Solicitados"
                    ),
                ),
                (
                    "imaging_studies_ordered",
                    models.TextField(
                        blank=True, verbose_name="Estudios de Imagen Solicitados"
                    ),
                ),
                (
                    "clinical_evolution",
                    models.TextField(blank=True, verbose_name="Evolución Clínica"),
                ),
                ("prognosis", models.TextField(blank=True, verbose_name="Pronóstico")),
                (
                    "observations",
                    models.TextField(blank=True, verbose_name="Observaciones"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "admission",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="attention",
                        to="emergency.emergencyadmission",
                        verbose_name="Admisión",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="emergency_attentions",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="emergency_attentions_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="emergency_attentions",
                        to="patients.patient",
                    ),
                ),
                (
                    "physician",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="emergency_attentions_as_physician",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Atención de Urgencias",
                "verbose_name_plural": "Atenciones de Urgencias",
                "db_table": "emergency_attention",
                "ordering": ["-attention_date"],
            },
        ),
        migrations.CreateModel(
            name="EmergencyDischarge",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "discharge_number",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Número de Alta"
                    ),
                ),
                (
                    "discharge_datetime",
                    models.DateTimeField(verbose_name="Fecha y Hora de Alta"),
                ),
                (
                    "discharge_type",
                    models.CharField(
                        choices=[
                            ("home", "Alta a Domicilio"),
                            ("hospitalization", "Hospitalización"),
                            ("observation", "Pase a Observación"),
                            ("transfer", "Traslado a Otra Institución"),
                            ("deceased", "Fallecido"),
                            ("voluntary", "Alta Voluntaria"),
                            ("left_without_attention", "Salió sin Atención Médica"),
                        ],
                        max_length=30,
                        verbose_name="Tipo de Alta",
                    ),
                ),
                (
                    "discharge_condition",
                    models.CharField(
                        choices=[
                            ("improved", "Mejorado"),
                            ("stable", "Estable"),
                            ("same", "Sin Cambios"),
                            ("worsened", "Empeorado"),
                            ("deceased", "Fallecido"),
                        ],
                        max_length=20,
                        verbose_name="Condición al Alta",
                    ),
                ),
                ("final_diagnosis", models.TextField(verbose_name="Diagnóstico Final")),
                (
                    "treatment_received",
                    models.TextField(verbose_name="Tratamiento Recibido"),
                ),
                (
                    "discharge_medications",
                    models.TextField(blank=True, verbose_name="Medicamentos al Alta"),
                ),
                (
                    "recommendations",
                    models.TextField(verbose_name="Recomendaciones al Alta"),
                ),
                (
                    "warning_signs",
                    models.TextField(blank=True, verbose_name="Signos de Alarma"),
                ),
                (
                    "follow_up_required",
                    models.BooleanField(
                        default=False, verbose_name="Requiere Seguimiento"
                    ),
                ),
                (
                    "follow_up_specialty",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Especialidad de Seguimiento",
                    ),
                ),
                (
                    "follow_up_days",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Seguimiento en X Días"
                    ),
                ),
                (
                    "sick_leave_days",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Días de Incapacidad"
                    ),
                ),
                (
                    "hospitalization_service",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Servicio de Hospitalización",
                    ),
                ),
                (
                    "bed_assigned",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Cama Asignada"
                    ),
                ),
                (
                    "transfer_institution",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        verbose_name="Institución de Traslado",
                    ),
                ),
                (
                    "transfer_reason",
                    models.TextField(blank=True, verbose_name="Razón del Traslado"),
                ),
                (
                    "observations",
                    models.TextField(blank=True, verbose_name="Observaciones"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "admission",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="discharge",
                        to="emergency.emergencyadmission",
                        verbose_name="Admisión",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="emergency_discharges",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="emergency_discharges_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "discharge_physician",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="emergency_discharges_as_physician",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Médico que da el Alta",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="emergency_discharges",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "Alta de Urgencias",
                "verbose_name_plural": "Altas de Urgencias",
                "db_table": "emergency_discharge",
                "ordering": ["-discharge_datetime"],
            },
        ),
        migrations.CreateModel(
            name="EmergencyProcedure",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "procedure_type",
                    models.CharField(
                        choices=[
                            ("suture", "Sutura"),
                            ("wound_care", "Curación de Herida"),
                            ("immobilization", "Inmovilización"),
                            ("catheter", "Cateterización"),
                            ("intubation", "Intubación"),
                            ("defibrillation", "Desfibrilación"),
                            ("minor_surgery", "Cirugía Menor"),
                            ("drainage", "Drenaje"),
                            ("injection", "Inyección"),
                            ("iv_therapy", "Terapia IV"),
                            ("oxygen_therapy", "Oxigenoterapia"),
                            ("other", "Otro"),
                        ],
                        max_length=30,
                        verbose_name="Tipo de Procedimiento",
                    ),
                ),
                (
                    "procedure_name",
                    models.CharField(
                        max_length=200, verbose_name="Nombre del Procedimiento"
                    ),
                ),
                (
                    "procedure_datetime",
                    models.DateTimeField(verbose_name="Fecha y Hora del Procedimiento"),
                ),
                ("indication", models.TextField(verbose_name="Indicación")),
                (
                    "procedure_description",
                    models.TextField(verbose_name="Descripción del Procedimiento"),
                ),
                (
                    "materials_used",
                    models.TextField(blank=True, verbose_name="Materiales Utilizados"),
                ),
                (
                    "assisted_by",
                    models.TextField(blank=True, verbose_name="Asistido por"),
                ),
                (
                    "complications",
                    models.TextField(blank=True, verbose_name="Complicaciones"),
                ),
                ("outcome", models.TextField(blank=True, verbose_name="Resultado")),
                (
                    "observations",
                    models.TextField(blank=True, verbose_name="Observaciones"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "admission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="procedures",
                        to="emergency.emergencyadmission",
                        verbose_name="Admisión",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="emergency_procedures",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="emergency_procedures_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "performed_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="emergency_procedures_performed",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Realizado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Procedimiento de Urgencias",
                "verbose_name_plural": "Procedimientos de Urgencias",
                "db_table": "emergency_procedure",
                "ordering": ["-procedure_datetime"],
            },
        ),
        migrations.CreateModel(
            name="TriageAssessment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "triage_number",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Número de Triage"
                    ),
                ),
                (
                    "arrival_datetime",
                    models.DateTimeField(verbose_name="Fecha y Hora de Llegada"),
                ),
                (
                    "triage_datetime",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha y Hora de Triage"
                    ),
                ),
                (
                    "arrival_mode",
                    models.CharField(
                        choices=[
                            ("walking", "Caminando"),
                            ("wheelchair", "Silla de Ruedas"),
                            ("stretcher", "Camilla"),
                            ("ambulance", "Ambulancia"),
                            ("police", "Policía"),
                            ("other", "Otro"),
                        ],
                        max_length=20,
                        verbose_name="Modo de Llegada",
                    ),
                ),
                (
                    "accompanied_by",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Acompañado por"
                    ),
                ),
                (
                    "chief_complaint",
                    models.TextField(verbose_name="Motivo de Consulta"),
                ),
                (
                    "symptom_duration",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Duración de Síntomas"
                    ),
                ),
                (
                    "blood_pressure",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Presión Arterial"
                    ),
                ),
                (
                    "heart_rate",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Frecuencia Cardíaca (lpm)"
                    ),
                ),
                (
                    "respiratory_rate",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Frecuencia Respiratoria (rpm)",
                    ),
                ),
                (
                    "temperature",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=4,
                        null=True,
                        verbose_name="Temperatura (°C)",
                    ),
                ),
                (
                    "oxygen_saturation",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Saturación O2 (%)"
                    ),
                ),
                (
                    "pain_scale",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Escala de Dolor (0-10)"
                    ),
                ),
                (
                    "consciousness_level",
                    models.CharField(
                        choices=[
                            ("alert", "Alerta"),
                            ("verbal", "Responde a Voz"),
                            ("pain", "Responde al Dolor"),
                            ("unresponsive", "No Responde"),
                        ],
                        default="alert",
                        max_length=20,
                        verbose_name="Nivel de Consciencia",
                    ),
                ),
                (
                    "glasgow_score",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Escala de Glasgow"
                    ),
                ),
                (
                    "triage_level",
                    models.CharField(
                        choices=[
                            ("I", "Nivel I - Resucitación (Rojo)"),
                            ("II", "Nivel II - Emergencia (Naranja)"),
                            ("III", "Nivel III - Urgencia (Amarillo)"),
                            ("IV", "Nivel IV - Urgencia Menor (Verde)"),
                            ("V", "Nivel V - No Urgente (Azul)"),
                        ],
                        max_length=5,
                        verbose_name="Nivel de Triage",
                    ),
                ),
                (
                    "triage_color",
                    models.CharField(
                        editable=False, max_length=20, verbose_name="Color de Triage"
                    ),
                ),
                (
                    "priority_time",
                    models.IntegerField(
                        help_text="Tiempo máximo de espera en minutos",
                        verbose_name="Tiempo Prioridad (min)",
                    ),
                ),
                (
                    "warning_signs",
                    models.TextField(blank=True, verbose_name="Signos de Alarma"),
                ),
                (
                    "allergies",
                    models.TextField(blank=True, verbose_name="Alergias Conocidas"),
                ),
                (
                    "current_medications",
                    models.TextField(blank=True, verbose_name="Medicación Actual"),
                ),
                (
                    "observations",
                    models.TextField(
                        blank=True, verbose_name="Observaciones de Triage"
                    ),
                ),
                (
                    "patient_called",
                    models.BooleanField(default=False, verbose_name="Paciente Llamado"),
                ),
                (
                    "call_datetime",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Hora de Llamado"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="triage_assessments",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="triage_assessments_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="triage_assessments",
                        to="patients.patient",
                        verbose_name="Paciente",
                    ),
                ),
                (
                    "triage_nurse",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="triage_assessments_performed",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Enfermera de Triage",
                    ),
                ),
            ],
            options={
                "verbose_name": "Triage",
                "verbose_name_plural": "Triages",
                "db_table": "emergency_triage",
                "ordering": ["triage_level", "-arrival_datetime"],
            },
        ),
        migrations.AddField(
            model_name="emergencyadmission",
            name="triage",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="admission",
                to="emergency.triageassessment",
                verbose_name="Triage",
            ),
        ),
        migrations.CreateModel(
            name="VitalSignsRecord",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "recorded_datetime",
                    models.DateTimeField(verbose_name="Fecha y Hora de Registro"),
                ),
                (
                    "blood_pressure_systolic",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Presión Sistólica (mmHg)"
                    ),
                ),
                (
                    "blood_pressure_diastolic",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Presión Diastólica (mmHg)"
                    ),
                ),
                (
                    "heart_rate",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Frecuencia Cardíaca (lpm)"
                    ),
                ),
                (
                    "respiratory_rate",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Frecuencia Respiratoria (rpm)",
                    ),
                ),
                (
                    "temperature",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=4,
                        null=True,
                        verbose_name="Temperatura (°C)",
                    ),
                ),
                (
                    "oxygen_saturation",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Saturación O2 (%)"
                    ),
                ),
                (
                    "pain_scale",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Escala de Dolor (0-10)"
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Peso (kg)",
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Talla (cm)",
                    ),
                ),
                (
                    "glasgow_score",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Escala de Glasgow"
                    ),
                ),
                (
                    "observations",
                    models.TextField(blank=True, verbose_name="Observaciones"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "admission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vital_signs_records",
                        to="emergency.emergencyadmission",
                        verbose_name="Admisión",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="emergency_vital_signs",
                        to="core.company",
                    ),
                ),
                (
                    "recorded_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="vital_signs_recorded",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Registro de Signos Vitales",
                "verbose_name_plural": "Registros de Signos Vitales",
                "db_table": "emergency_vital_signs",
                "ordering": ["-recorded_datetime"],
            },
        ),
        migrations.DeleteModel(
            name="EmergencyModule",
        ),
        migrations.AddIndex(
            model_name="triageassessment",
            index=models.Index(
                fields=["company", "triage_level"],
                name="emergency_t_company_3dc164_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="triageassessment",
            index=models.Index(
                fields=["patient", "arrival_datetime"],
                name="emergency_t_patient_799382_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="emergencyadmission",
            index=models.Index(
                fields=["company", "status"], name="emergency_a_company_c66cfb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="emergencyadmission",
            index=models.Index(
                fields=["patient", "admission_datetime"],
                name="emergency_a_patient_d2b5a3_idx",
            ),
        ),
    ]
