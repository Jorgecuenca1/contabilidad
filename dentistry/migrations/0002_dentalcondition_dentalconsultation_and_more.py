# Generated by Django 5.1.4 on 2025-10-15 19:00

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0008_usercompanypermission_can_access_billing_health_and_more"),
        ("dentistry", "0001_initial"),
        ("patients", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DentalCondition",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("code", models.CharField(max_length=20)),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "color",
                    models.CharField(
                        default="#FF0000", help_text="Color hexadecimal", max_length=7
                    ),
                ),
                (
                    "symbol",
                    models.CharField(
                        blank=True, help_text="Símbolo para odontograma", max_length=10
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="dental_conditions_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Condición Dental",
                "verbose_name_plural": "Condiciones Dentales",
                "db_table": "dentistry_condition",
                "ordering": ["name"],
                "unique_together": {("company", "code")},
            },
        ),
        migrations.CreateModel(
            name="DentalConsultation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("consultation_number", models.CharField(max_length=50, unique=True)),
                (
                    "consultation_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "chief_complaint",
                    models.TextField(verbose_name="Motivo de consulta"),
                ),
                (
                    "current_illness",
                    models.TextField(blank=True, verbose_name="Enfermedad actual"),
                ),
                (
                    "dental_history",
                    models.TextField(
                        blank=True, verbose_name="Antecedentes odontológicos"
                    ),
                ),
                (
                    "medical_history",
                    models.TextField(blank=True, verbose_name="Antecedentes médicos"),
                ),
                (
                    "extraoral_examination",
                    models.TextField(blank=True, verbose_name="Examen extraoral"),
                ),
                (
                    "intraoral_examination",
                    models.TextField(blank=True, verbose_name="Examen intraoral"),
                ),
                (
                    "oral_hygiene",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("excellent", "Excelente"),
                            ("good", "Buena"),
                            ("fair", "Regular"),
                            ("poor", "Mala"),
                        ],
                        max_length=20,
                    ),
                ),
                ("diagnosis", models.TextField(verbose_name="Diagnóstico")),
                ("observations", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("in_progress", "En Proceso"),
                            ("completed", "Completada"),
                            ("cancelled", "Cancelada"),
                        ],
                        default="in_progress",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="dental_consultations_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "dentist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="dental_consultations_as_dentist",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="dental_consultations",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "Consulta Odontológica",
                "verbose_name_plural": "Consultas Odontológicas",
                "db_table": "dentistry_consultation",
                "ordering": ["-consultation_date"],
            },
        ),
        migrations.CreateModel(
            name="DentalProcedureType",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("code", models.CharField(max_length=20)),
                ("name", models.CharField(max_length=200)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("preventive", "Preventiva"),
                            ("restorative", "Operatoria/Restauración"),
                            ("endodontic", "Endodoncia"),
                            ("periodontic", "Periodoncia"),
                            ("surgery", "Cirugía"),
                            ("prosthetic", "Prótesis"),
                            ("orthodontic", "Ortodoncia"),
                            ("pediatric", "Odontopediatría"),
                            ("cosmetic", "Estética"),
                            ("other", "Otro"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "base_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "estimated_duration",
                    models.IntegerField(default=30, help_text="Duración en minutos"),
                ),
                ("requires_anesthesia", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="dental_procedures_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Tipo de Procedimiento Dental",
                "verbose_name_plural": "Tipos de Procedimientos Dentales",
                "db_table": "dentistry_procedure_type",
                "ordering": ["category", "name"],
                "unique_together": {("company", "code")},
            },
        ),
        migrations.CreateModel(
            name="Odontogram",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "odontogram_date",
                    models.DateField(default=django.utils.timezone.now),
                ),
                (
                    "dentition_type",
                    models.CharField(
                        choices=[
                            ("deciduous", "Decidua (Temporal)"),
                            ("mixed", "Mixta"),
                            ("permanent", "Permanente"),
                        ],
                        default="permanent",
                        max_length=20,
                    ),
                ),
                ("general_observations", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "consultation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="odontograms",
                        to="dentistry.dentalconsultation",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="odontograms_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="odontograms",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "Odontograma",
                "verbose_name_plural": "Odontogramas",
                "db_table": "dentistry_odontogram",
                "ordering": ["-odontogram_date"],
            },
        ),
        migrations.CreateModel(
            name="OdontogramTooth",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "fdi_number",
                    models.CharField(
                        help_text="Número FDI (ej: 11, 21, 46)", max_length=2
                    ),
                ),
                (
                    "quadrant",
                    models.CharField(
                        choices=[
                            ("1", "Cuadrante 1 - Superior Derecho"),
                            ("2", "Cuadrante 2 - Superior Izquierdo"),
                            ("3", "Cuadrante 3 - Inferior Izquierdo"),
                            ("4", "Cuadrante 4 - Inferior Derecho"),
                            ("5", "Cuadrante 5 - Superior Derecho Deciduo"),
                            ("6", "Cuadrante 6 - Superior Izquierdo Deciduo"),
                            ("7", "Cuadrante 7 - Inferior Izquierdo Deciduo"),
                            ("8", "Cuadrante 8 - Inferior Derecho Deciduo"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "tooth_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("incisor", "Incisivo"),
                            ("canine", "Canino"),
                            ("premolar", "Premolar"),
                            ("molar", "Molar"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("present", "Presente"),
                            ("absent", "Ausente"),
                            ("extracted", "Extraído"),
                            ("congenital_absence", "Ausencia Congénita"),
                            ("unerupted", "Sin Erupcionar"),
                            ("impacted", "Impactado"),
                        ],
                        default="present",
                        max_length=30,
                    ),
                ),
                (
                    "surface_mesial",
                    models.BooleanField(
                        default=False, verbose_name="Superficie Mesial (M)"
                    ),
                ),
                (
                    "surface_distal",
                    models.BooleanField(
                        default=False, verbose_name="Superficie Distal (D)"
                    ),
                ),
                (
                    "surface_occlusal",
                    models.BooleanField(
                        default=False, verbose_name="Superficie Oclusal (O)"
                    ),
                ),
                (
                    "surface_vestibular",
                    models.BooleanField(
                        default=False, verbose_name="Superficie Vestibular (V)"
                    ),
                ),
                (
                    "surface_lingual",
                    models.BooleanField(
                        default=False, verbose_name="Superficie Lingual/Palatina (L/P)"
                    ),
                ),
                ("observations", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "conditions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="odontogram_teeth",
                        to="dentistry.dentalcondition",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="odontogram_teeth_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "odontogram",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teeth",
                        to="dentistry.odontogram",
                    ),
                ),
            ],
            options={
                "verbose_name": "Diente en Odontograma",
                "verbose_name_plural": "Dientes en Odontograma",
                "db_table": "dentistry_odontogram_tooth",
                "ordering": ["fdi_number"],
                "unique_together": {("odontogram", "fdi_number")},
            },
        ),
        migrations.CreateModel(
            name="TreatmentPlan",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("plan_number", models.CharField(max_length=50, unique=True)),
                ("plan_date", models.DateField(default=django.utils.timezone.now)),
                ("diagnosis", models.TextField()),
                ("treatment_objectives", models.TextField(blank=True)),
                ("observations", models.TextField(blank=True)),
                (
                    "total_estimated_cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Borrador"),
                            ("approved", "Aprobado"),
                            ("in_progress", "En Progreso"),
                            ("completed", "Completado"),
                            ("cancelled", "Cancelado"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "patient_consent",
                    models.BooleanField(
                        default=False, verbose_name="Consentimiento del paciente"
                    ),
                ),
                ("consent_date", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "consultation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="treatment_plans",
                        to="dentistry.dentalconsultation",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="treatment_plans_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "dentist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="treatment_plans_as_dentist",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "odontogram",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="treatment_plans",
                        to="dentistry.odontogram",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="dental_treatment_plans",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "Plan de Tratamiento",
                "verbose_name_plural": "Planes de Tratamiento",
                "db_table": "dentistry_treatment_plan",
                "ordering": ["-plan_date"],
            },
        ),
        migrations.CreateModel(
            name="TreatmentPlanItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "tooth_fdi",
                    models.CharField(
                        blank=True, help_text="Número FDI del diente", max_length=2
                    ),
                ),
                (
                    "surfaces",
                    models.CharField(
                        blank=True, help_text="Ej: MOD, V, L", max_length=10
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("urgent", "Urgente"),
                            ("high", "Alta"),
                            ("medium", "Media"),
                            ("low", "Baja"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                ("sequence", models.IntegerField(default=1)),
                (
                    "unit_cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("quantity", models.IntegerField(default=1)),
                (
                    "total_cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendiente"),
                            ("in_progress", "En Progreso"),
                            ("completed", "Completado"),
                            ("cancelled", "Cancelado"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("completion_date", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "completed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="treatment_items_completed",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="treatment_plan_items_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "procedure",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="treatment_plan_items",
                        to="dentistry.dentalproceduretype",
                    ),
                ),
                (
                    "treatment_plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="dentistry.treatmentplan",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ítem de Plan de Tratamiento",
                "verbose_name_plural": "Ítems de Plan de Tratamiento",
                "db_table": "dentistry_treatment_plan_item",
                "ordering": ["sequence", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="DentalProcedureRecord",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("record_number", models.CharField(max_length=50, unique=True)),
                ("procedure_date", models.DateField(default=django.utils.timezone.now)),
                ("tooth_fdi", models.CharField(blank=True, max_length=2)),
                ("surfaces", models.CharField(blank=True, max_length=10)),
                ("anesthesia_used", models.BooleanField(default=False)),
                ("anesthesia_type", models.CharField(blank=True, max_length=100)),
                (
                    "materials_used",
                    models.TextField(blank=True, verbose_name="Materiales utilizados"),
                ),
                (
                    "procedure_notes",
                    models.TextField(
                        blank=True, verbose_name="Notas del procedimiento"
                    ),
                ),
                ("complications", models.TextField(blank=True)),
                (
                    "post_procedure_instructions",
                    models.TextField(blank=True, verbose_name="Indicaciones"),
                ),
                ("next_appointment_date", models.DateField(blank=True, null=True)),
                (
                    "cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "consultation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="procedures",
                        to="dentistry.dentalconsultation",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="procedure_records_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "dentist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="procedures_performed",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="dental_procedures",
                        to="patients.patient",
                    ),
                ),
                (
                    "procedure",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="procedure_records",
                        to="dentistry.dentalproceduretype",
                    ),
                ),
                (
                    "treatment_plan_item",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="procedure_records",
                        to="dentistry.treatmentplanitem",
                    ),
                ),
            ],
            options={
                "verbose_name": "Registro de Procedimiento",
                "verbose_name_plural": "Registros de Procedimientos",
                "db_table": "dentistry_procedure_record",
                "ordering": ["-procedure_date"],
            },
        ),
        migrations.DeleteModel(
            name="DentistryModule",
        ),
    ]
