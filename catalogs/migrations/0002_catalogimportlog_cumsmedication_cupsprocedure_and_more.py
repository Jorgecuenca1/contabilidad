# Generated by Django 5.1.4 on 2025-10-13 16:33

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("catalogs", "0001_initial"),
        ("core", "0008_usercompanypermission_can_access_billing_health_and_more"),
        ("patients", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CatalogImportLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "import_type",
                    models.CharField(
                        choices=[
                            ("cups", "CUPS"),
                            ("cums", "CUMS"),
                            ("tariffs", "Tarifas"),
                            ("prices", "Precios"),
                        ],
                        max_length=30,
                    ),
                ),
                ("import_date", models.DateTimeField(auto_now_add=True)),
                (
                    "source_file",
                    models.FileField(
                        blank=True, null=True, upload_to="catalog_imports/%Y/%m/"
                    ),
                ),
                ("file_name", models.CharField(max_length=300)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("in_progress", "En Progreso"),
                            ("completed", "Completado"),
                            ("failed", "Fallido"),
                            ("partial", "Parcial"),
                        ],
                        default="in_progress",
                        max_length=20,
                    ),
                ),
                ("total_records", models.IntegerField(default=0)),
                ("imported_records", models.IntegerField(default=0)),
                ("updated_records", models.IntegerField(default=0)),
                ("failed_records", models.IntegerField(default=0)),
                ("error_log", models.TextField(blank=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "imported_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="catalog_imports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Registro de Importación",
                "verbose_name_plural": "Registros de Importaciones",
                "db_table": "catalogs_import_logs",
                "ordering": ["-import_date"],
            },
        ),
        migrations.CreateModel(
            name="CUMSMedication",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "cums_code",
                    models.CharField(
                        db_index=True, help_text="Código CUMS oficial", max_length=20
                    ),
                ),
                (
                    "generic_name",
                    models.CharField(
                        help_text="Nombre genérico (principio activo)", max_length=300
                    ),
                ),
                (
                    "commercial_name",
                    models.CharField(
                        blank=True, help_text="Nombre comercial", max_length=300
                    ),
                ),
                (
                    "pharmaceutical_form",
                    models.CharField(
                        choices=[
                            ("tablet", "Tableta"),
                            ("capsule", "Cápsula"),
                            ("syrup", "Jarabe"),
                            ("suspension", "Suspensión"),
                            ("solution", "Solución"),
                            ("injection", "Inyectable"),
                            ("cream", "Crema"),
                            ("ointment", "Ungüento"),
                            ("drops", "Gotas"),
                            ("inhaler", "Inhalador"),
                            ("patch", "Parche"),
                            ("suppository", "Supositorio"),
                            ("other", "Otro"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "concentration",
                    models.CharField(help_text="Ej: 500mg, 250mg/5ml", max_length=100),
                ),
                (
                    "presentation",
                    models.CharField(
                        help_text="Ej: Caja x 30 tabletas", max_length=200
                    ),
                ),
                (
                    "administration_route",
                    models.CharField(
                        choices=[
                            ("oral", "Oral"),
                            ("iv", "Intravenosa"),
                            ("im", "Intramuscular"),
                            ("sc", "Subcutánea"),
                            ("topical", "Tópica"),
                            ("inhalation", "Inhalación"),
                            ("ophthalmic", "Oftálmica"),
                            ("otic", "Ótica"),
                            ("nasal", "Nasal"),
                            ("rectal", "Rectal"),
                            ("vaginal", "Vaginal"),
                            ("other", "Otra"),
                        ],
                        max_length=30,
                    ),
                ),
                ("manufacturer", models.CharField(blank=True, max_length=200)),
                ("importer", models.CharField(blank=True, max_length=200)),
                (
                    "sanitary_registration",
                    models.CharField(blank=True, help_text="INVIMA", max_length=50),
                ),
                ("registration_date", models.DateField(blank=True, null=True)),
                ("registration_expiry", models.DateField(blank=True, null=True)),
                (
                    "atc_code",
                    models.CharField(blank=True, help_text="Código ATC", max_length=20),
                ),
                ("therapeutic_group", models.CharField(blank=True, max_length=200)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Activo"),
                            ("inactive", "Inactivo"),
                            ("controlled", "Controlado"),
                            ("discontinued", "Descontinuado"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("requires_prescription", models.BooleanField(default=True)),
                ("is_controlled_substance", models.BooleanField(default=False)),
                (
                    "pos_medication",
                    models.BooleanField(default=True, help_text="Medicamento POS"),
                ),
                ("indications", models.TextField(blank=True)),
                ("contraindications", models.TextField(blank=True)),
                ("adverse_effects", models.TextField(blank=True)),
                ("dosage_instructions", models.TextField(blank=True)),
                ("usage_count", models.IntegerField(default=0)),
                ("is_favorite", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="cums_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Medicamento CUMS",
                "verbose_name_plural": "Medicamentos CUMS",
                "db_table": "catalogs_cums_medications",
                "ordering": ["generic_name"],
            },
        ),
        migrations.CreateModel(
            name="CUPSProcedure",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "cups_code",
                    models.CharField(
                        db_index=True, help_text="Código CUPS oficial", max_length=20
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="Descripción completa del procedimiento",
                        max_length=500,
                    ),
                ),
                ("short_description", models.CharField(blank=True, max_length=200)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("consultation", "Consulta"),
                            ("surgery", "Cirugía"),
                            ("imaging", "Imágenes Diagnósticas"),
                            ("laboratory", "Laboratorio Clínico"),
                            ("therapy", "Terapia/Rehabilitación"),
                            ("hospitalization", "Hospitalización"),
                            ("emergency", "Urgencias"),
                            ("procedure", "Procedimiento"),
                            ("other", "Otro"),
                        ],
                        max_length=30,
                    ),
                ),
                ("subcategory", models.CharField(blank=True, max_length=100)),
                (
                    "chapter",
                    models.CharField(
                        blank=True, help_text="Capítulo del CUPS", max_length=100
                    ),
                ),
                (
                    "section",
                    models.CharField(
                        blank=True, help_text="Sección del CUPS", max_length=100
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Activo"),
                            ("inactive", "Inactivo"),
                            ("deprecated", "Obsoleto"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("effective_date", models.DateField(blank=True, null=True)),
                ("expiration_date", models.DateField(blank=True, null=True)),
                (
                    "requires_authorization",
                    models.BooleanField(
                        default=False, help_text="Requiere autorización previa de EPS"
                    ),
                ),
                ("requires_specialist", models.BooleanField(default=False)),
                (
                    "estimated_duration_minutes",
                    models.IntegerField(blank=True, null=True),
                ),
                ("technical_notes", models.TextField(blank=True)),
                ("contraindications", models.TextField(blank=True)),
                (
                    "usage_count",
                    models.IntegerField(default=0, help_text="Contador de uso"),
                ),
                ("is_favorite", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="cups_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Procedimiento CUPS",
                "verbose_name_plural": "Procedimientos CUPS",
                "db_table": "catalogs_cups_procedures",
                "ordering": ["cups_code"],
            },
        ),
        migrations.CreateModel(
            name="FavoriteCatalogItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "item_type",
                    models.CharField(
                        choices=[
                            ("cups", "Procedimiento CUPS"),
                            ("cums", "Medicamento CUMS"),
                        ],
                        max_length=10,
                    ),
                ),
                ("specialty", models.CharField(blank=True, max_length=100)),
                ("category", models.CharField(blank=True, max_length=100)),
                ("sort_order", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "cums_medication",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorited_by",
                        to="catalogs.cumsmedication",
                    ),
                ),
                (
                    "cups_procedure",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorited_by",
                        to="catalogs.cupsprocedure",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorite_catalog_items",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Favorito",
                "verbose_name_plural": "Favoritos",
                "db_table": "catalogs_favorites",
                "ordering": ["sort_order", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MedicationPrice",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "price_type",
                    models.CharField(
                        choices=[
                            ("pos", "POS"),
                            ("no_pos", "No POS"),
                            ("particular", "Particular"),
                            ("negotiated", "Negociado"),
                        ],
                        default="pos",
                        max_length=30,
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Precio por unidad (tableta, ampolla, etc.)",
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "presentation_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Precio por presentación comercial",
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "maximum_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Precio máximo regulado (si aplica)",
                        max_digits=12,
                        null=True,
                    ),
                ),
                ("effective_date", models.DateField()),
                ("expiration_date", models.DateField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="med_prices_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "cums_medication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prices",
                        to="catalogs.cumsmedication",
                    ),
                ),
                (
                    "eps",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="medication_prices",
                        to="patients.eps",
                    ),
                ),
            ],
            options={
                "verbose_name": "Precio de Medicamento",
                "verbose_name_plural": "Precios de Medicamentos",
                "db_table": "catalogs_medication_prices",
                "ordering": ["-effective_date"],
            },
        ),
        migrations.CreateModel(
            name="ProcedureTariff",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "tariff_type",
                    models.CharField(
                        choices=[
                            ("soat", "SOAT"),
                            ("iss_2001", "ISS 2001"),
                            ("iss_2004", "ISS 2004"),
                            ("particular", "Particular"),
                            ("negotiated", "Negociado"),
                        ],
                        default="iss_2001",
                        max_length=30,
                    ),
                ),
                ("contract_number", models.CharField(blank=True, max_length=100)),
                (
                    "base_value",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "percentage_adjustment",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("100.00"),
                        help_text="Porcentaje sobre valor base (100% = sin ajuste)",
                        max_digits=5,
                    ),
                ),
                (
                    "final_value",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                ("effective_date", models.DateField()),
                ("expiration_date", models.DateField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="proc_tariffs_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "cups_procedure",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tariffs",
                        to="catalogs.cupsprocedure",
                    ),
                ),
                (
                    "eps",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="procedure_tariffs",
                        to="patients.eps",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tarifa de Procedimiento",
                "verbose_name_plural": "Tarifas de Procedimientos",
                "db_table": "catalogs_procedure_tariffs",
                "ordering": ["-effective_date"],
            },
        ),
        migrations.DeleteModel(
            name="CatalogsModule",
        ),
        migrations.AddIndex(
            model_name="cumsmedication",
            index=models.Index(
                fields=["cums_code"], name="catalogs_cu_cums_co_d7bdfe_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="cumsmedication",
            index=models.Index(
                fields=["generic_name"], name="catalogs_cu_generic_1dd61e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="cumsmedication",
            index=models.Index(
                fields=["commercial_name"], name="catalogs_cu_commerc_b272b3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="cumsmedication",
            index=models.Index(fields=["status"], name="catalogs_cu_status_2cc8b6_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="cumsmedication",
            unique_together={("company", "cums_code")},
        ),
        migrations.AddIndex(
            model_name="cupsprocedure",
            index=models.Index(
                fields=["cups_code"], name="catalogs_cu_cups_co_5ac273_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="cupsprocedure",
            index=models.Index(
                fields=["category"], name="catalogs_cu_categor_0f9936_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="cupsprocedure",
            index=models.Index(fields=["status"], name="catalogs_cu_status_2d4141_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="cupsprocedure",
            unique_together={("company", "cups_code")},
        ),
        migrations.AlterUniqueTogether(
            name="favoritecatalogitem",
            unique_together={
                ("user", "item_type", "cups_procedure", "cums_medication")
            },
        ),
        migrations.AddIndex(
            model_name="medicationprice",
            index=models.Index(
                fields=["cums_medication", "eps"], name="catalogs_me_cums_me_1534ea_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="medicationprice",
            index=models.Index(
                fields=["effective_date"], name="catalogs_me_effecti_5d9e4d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="proceduretariff",
            index=models.Index(
                fields=["cups_procedure", "eps"], name="catalogs_pr_cups_pr_1114a1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="proceduretariff",
            index=models.Index(
                fields=["effective_date"], name="catalogs_pr_effecti_a3e8ae_idx"
            ),
        ),
    ]
