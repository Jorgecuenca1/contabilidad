# Generated by Django 5.1.4 on 2025-09-11 20:49

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0005_systemmodule_companymodule_usermodulepermission"),
        ("gynecology", "0001_initial"),
        ("third_parties", "0004_thirdparty_birth_date_thirdparty_gender"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="LabOrder",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("order_number", models.CharField(max_length=20, unique=True)),
                (
                    "ordering_physician",
                    models.CharField(help_text="Médico que ordena", max_length=200),
                ),
                (
                    "clinical_indication",
                    models.TextField(help_text="Indicación clínica"),
                ),
                (
                    "diagnosis_code",
                    models.CharField(
                        blank=True, help_text="Código CIE-10", max_length=20
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("routine", "Rutina"),
                            ("urgent", "Urgente"),
                            ("stat", "STAT/Inmediato"),
                        ],
                        default="routine",
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendiente"),
                            ("collected", "Recolectada"),
                            ("processing", "En Proceso"),
                            ("completed", "Completada"),
                            ("cancelled", "Cancelada"),
                            ("rejected", "Rechazada"),
                        ],
                        default="pending",
                        max_length=15,
                    ),
                ),
                (
                    "ordered_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("collection_date", models.DateTimeField(blank=True, null=True)),
                ("expected_completion", models.DateTimeField(blank=True, null=True)),
                ("completed_date", models.DateTimeField(blank=True, null=True)),
                (
                    "insurance_authorization",
                    models.CharField(blank=True, max_length=50),
                ),
                ("is_billable", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lab_orders",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_lab_orders",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "gynecology_appointment",
                    models.ForeignKey(
                        blank=True,
                        help_text="Cita de ginecología relacionada",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="lab_orders",
                        to="gynecology.gynecologyappointment",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lab_orders",
                        to="third_parties.thirdparty",
                    ),
                ),
            ],
            options={
                "verbose_name": "Orden de Laboratorio",
                "verbose_name_plural": "Órdenes de Laboratorio",
                "db_table": "laboratory_orders",
                "ordering": ["-ordered_date"],
            },
        ),
        migrations.CreateModel(
            name="LabSection",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("code", models.CharField(max_length=10)),
                ("name", models.CharField(max_length=100)),
                (
                    "section_type",
                    models.CharField(
                        choices=[
                            ("hematology", "Hematología"),
                            ("chemistry", "Química Clínica"),
                            ("microbiology", "Microbiología"),
                            ("pathology", "Patología"),
                            ("molecular", "Diagnóstico Molecular"),
                            ("blood_bank", "Banco de Sangre"),
                            ("immunology", "Inmunología"),
                            ("cytology", "Citología"),
                            ("toxicology", "Toxicología"),
                            ("parasitology", "Parasitología"),
                            ("mycology", "Micología"),
                            ("virology", "Virología"),
                            ("gynecology", "Laboratorio de Ginecología"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("requires_special_handling", models.BooleanField(default=False)),
                ("max_processing_time_hours", models.IntegerField(default=24)),
                (
                    "is_stat_available",
                    models.BooleanField(
                        default=True, help_text="Permite pruebas STAT/urgentes"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lab_sections",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Sección de Laboratorio",
                "verbose_name_plural": "Secciones de Laboratorio",
                "db_table": "laboratory_sections",
                "ordering": ["section_type", "name"],
                "unique_together": {("company", "code")},
            },
        ),
        migrations.CreateModel(
            name="LabTest",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Código interno del laboratorio", max_length=20
                    ),
                ),
                (
                    "loinc_code",
                    models.CharField(
                        blank=True, help_text="Código LOINC estándar", max_length=20
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("short_name", models.CharField(max_length=50)),
                ("description", models.TextField(blank=True)),
                (
                    "specimen_type",
                    models.CharField(
                        choices=[
                            ("blood_serum", "Suero"),
                            ("blood_plasma", "Plasma"),
                            ("whole_blood", "Sangre Total"),
                            ("urine", "Orina"),
                            ("stool", "Heces"),
                            ("csf", "Líquido Cefalorraquídeo"),
                            ("sputum", "Esputo"),
                            ("wound_swab", "Hisopo de Herida"),
                            ("throat_swab", "Hisopo Faríngeo"),
                            ("vaginal_swab", "Hisopo Vaginal"),
                            ("cervical_sample", "Muestra Cervical"),
                            ("tissue", "Tejido"),
                            ("saliva", "Saliva"),
                            ("other", "Otro"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "specimen_volume_ml",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=6,
                        validators=[django.core.validators.MinValueValidator(0.1)],
                    ),
                ),
                (
                    "result_type",
                    models.CharField(
                        choices=[
                            ("numeric", "Numérico"),
                            ("text", "Texto"),
                            ("positive_negative", "Positivo/Negativo"),
                            ("normal_abnormal", "Normal/Anormal"),
                            ("qualitative", "Cualitativo"),
                            ("culture", "Cultivo"),
                            ("morphology", "Morfología"),
                        ],
                        max_length=20,
                    ),
                ),
                ("unit_of_measure", models.CharField(blank=True, max_length=50)),
                (
                    "reference_range_min",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=12, null=True
                    ),
                ),
                (
                    "reference_range_max",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=12, null=True
                    ),
                ),
                (
                    "reference_range_text",
                    models.TextField(blank=True, help_text="Para valores no numéricos"),
                ),
                ("requires_fasting", models.BooleanField(default=False)),
                ("fasting_hours", models.IntegerField(blank=True, null=True)),
                ("processing_time_hours", models.IntegerField(default=24)),
                ("stat_processing_time_hours", models.IntegerField(default=2)),
                (
                    "cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_stat_available", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lab_tests",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Prueba de Laboratorio",
                "verbose_name_plural": "Pruebas de Laboratorio",
                "db_table": "laboratory_tests",
                "ordering": ["category", "name"],
            },
        ),
        migrations.CreateModel(
            name="LabInstrument",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("serial_number", models.CharField(max_length=100, unique=True)),
                ("name", models.CharField(max_length=200)),
                ("manufacturer", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
                (
                    "interface_type",
                    models.CharField(
                        blank=True,
                        help_text="Tipo de interfaz (HL7, LIS, etc.)",
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Activo"),
                            ("maintenance", "En Mantenimiento"),
                            ("calibration", "En Calibración"),
                            ("inactive", "Inactivo"),
                            ("retired", "Retirado"),
                        ],
                        default="active",
                        max_length=15,
                    ),
                ),
                ("location", models.CharField(max_length=200)),
                ("installation_date", models.DateField()),
                ("last_maintenance", models.DateField(blank=True, null=True)),
                ("next_maintenance", models.DateField(blank=True, null=True)),
                ("last_calibration", models.DateField(blank=True, null=True)),
                ("next_calibration", models.DateField(blank=True, null=True)),
                ("warranty_expiry", models.DateField(blank=True, null=True)),
                ("service_contract", models.CharField(blank=True, max_length=200)),
                ("notes", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lab_instruments",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "section",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="instruments",
                        to="laboratory.labsection",
                    ),
                ),
                (
                    "supported_tests",
                    models.ManyToManyField(
                        blank=True,
                        related_name="compatible_instruments",
                        to="laboratory.labtest",
                    ),
                ),
            ],
            options={
                "verbose_name": "Instrumento de Laboratorio",
                "verbose_name_plural": "Instrumentos de Laboratorio",
                "db_table": "laboratory_instruments",
                "ordering": ["section", "name"],
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendiente"),
                            ("collected", "Recolectada"),
                            ("processing", "En Proceso"),
                            ("resulted", "Con Resultado"),
                            ("cancelled", "Cancelada"),
                        ],
                        default="pending",
                        max_length=15,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("routine", "Rutina"),
                            ("urgent", "Urgente"),
                            ("stat", "STAT/Inmediato"),
                        ],
                        default="routine",
                        max_length=10,
                    ),
                ),
                ("special_instructions", models.TextField(blank=True)),
                ("expected_completion", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "lab_order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="laboratory.laborder",
                    ),
                ),
                (
                    "test",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_items",
                        to="laboratory.labtest",
                    ),
                ),
            ],
            options={
                "verbose_name": "Item de Orden",
                "verbose_name_plural": "Items de Orden",
                "db_table": "laboratory_order_items",
                "unique_together": {("lab_order", "test")},
            },
        ),
        migrations.CreateModel(
            name="Specimen",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("specimen_id", models.CharField(max_length=50, unique=True)),
                ("barcode", models.CharField(blank=True, max_length=100)),
                (
                    "specimen_type",
                    models.CharField(
                        choices=[
                            ("blood_serum", "Suero"),
                            ("blood_plasma", "Plasma"),
                            ("whole_blood", "Sangre Total"),
                            ("urine", "Orina"),
                            ("stool", "Heces"),
                            ("csf", "Líquido Cefalorraquídeo"),
                            ("sputum", "Esputo"),
                            ("wound_swab", "Hisopo de Herida"),
                            ("throat_swab", "Hisopo Faríngeo"),
                            ("vaginal_swab", "Hisopo Vaginal"),
                            ("cervical_sample", "Muestra Cervical"),
                            ("tissue", "Tejido"),
                            ("saliva", "Saliva"),
                            ("other", "Otro"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "volume_ml",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                ("container_type", models.CharField(max_length=50)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("collected", "Recolectada"),
                            ("received", "Recibida"),
                            ("processing", "En Proceso"),
                            ("completed", "Procesada"),
                            ("rejected", "Rechazada"),
                            ("discarded", "Descartada"),
                        ],
                        default="collected",
                        max_length=15,
                    ),
                ),
                (
                    "rejection_reason",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("insufficient_volume", "Volumen Insuficiente"),
                            ("hemolyzed", "Hemolizada"),
                            ("clotted", "Coagulada"),
                            ("contaminated", "Contaminada"),
                            ("incorrect_container", "Contenedor Incorrecto"),
                            ("unlabeled", "Sin Etiqueta"),
                            ("expired", "Vencida"),
                            ("other", "Otro"),
                        ],
                        max_length=30,
                    ),
                ),
                ("rejection_notes", models.TextField(blank=True)),
                ("collected_datetime", models.DateTimeField()),
                ("received_datetime", models.DateTimeField(blank=True, null=True)),
                ("processing_started", models.DateTimeField(blank=True, null=True)),
                ("completed_datetime", models.DateTimeField(blank=True, null=True)),
                (
                    "location",
                    models.CharField(
                        blank=True, help_text="Ubicación actual", max_length=100
                    ),
                ),
                (
                    "temperature_storage",
                    models.CharField(default="Temperatura ambiente", max_length=50),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "collected_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="collected_specimens",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "lab_order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="specimens",
                        to="laboratory.laborder",
                    ),
                ),
                (
                    "received_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="received_specimens",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Muestra de Laboratorio",
                "verbose_name_plural": "Muestras de Laboratorio",
                "db_table": "laboratory_specimens",
                "ordering": ["-collected_datetime"],
            },
        ),
        migrations.CreateModel(
            name="TestCategory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("code", models.CharField(max_length=20)),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("requires_fasting", models.BooleanField(default=False)),
                ("special_instructions", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="test_categories",
                        to="core.company",
                    ),
                ),
                (
                    "section",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="test_categories",
                        to="laboratory.labsection",
                    ),
                ),
            ],
            options={
                "verbose_name": "Categoría de Prueba",
                "verbose_name_plural": "Categorías de Pruebas",
                "db_table": "laboratory_test_categories",
                "ordering": ["section", "name"],
                "unique_together": {("company", "code")},
            },
        ),
        migrations.AddField(
            model_name="labtest",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tests",
                to="laboratory.testcategory",
            ),
        ),
        migrations.CreateModel(
            name="TestResult",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "numeric_result",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=12, null=True
                    ),
                ),
                ("text_result", models.TextField(blank=True)),
                (
                    "flag",
                    models.CharField(
                        choices=[
                            ("normal", "Normal"),
                            ("high", "Alto"),
                            ("low", "Bajo"),
                            ("critical_high", "Crítico Alto"),
                            ("critical_low", "Crítico Bajo"),
                            ("abnormal", "Anormal"),
                        ],
                        default="normal",
                        max_length=15,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendiente"),
                            ("preliminary", "Preliminar"),
                            ("final", "Final"),
                            ("corrected", "Corregido"),
                            ("cancelled", "Cancelado"),
                        ],
                        default="pending",
                        max_length=15,
                    ),
                ),
                ("reference_range_used", models.CharField(blank=True, max_length=200)),
                ("notes", models.TextField(blank=True, help_text="Notas del técnico")),
                (
                    "interpretation",
                    models.TextField(blank=True, help_text="Interpretación médica"),
                ),
                ("instrument_id", models.CharField(blank=True, max_length=50)),
                ("qc_passed", models.BooleanField(default=True)),
                ("qc_notes", models.TextField(blank=True)),
                (
                    "tested_datetime",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("verified_datetime", models.DateTimeField(blank=True, null=True)),
                ("approved_datetime", models.DateTimeField(blank=True, null=True)),
                ("released_datetime", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="approved_results",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "order_item",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="result",
                        to="laboratory.orderitem",
                    ),
                ),
                (
                    "specimen",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="results",
                        to="laboratory.specimen",
                    ),
                ),
                (
                    "tested_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="tested_results",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="verified_results",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Resultado de Prueba",
                "verbose_name_plural": "Resultados de Pruebas",
                "db_table": "laboratory_test_results",
                "ordering": ["-tested_datetime"],
            },
        ),
        migrations.CreateModel(
            name="CriticalValueAlert",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("alert_message", models.TextField()),
                ("severity_level", models.CharField(default="high", max_length=20)),
                (
                    "notification_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendiente"),
                            ("notified", "Notificado"),
                            ("acknowledged", "Confirmado"),
                            ("resolved", "Resuelto"),
                        ],
                        default="pending",
                        max_length=15,
                    ),
                ),
                (
                    "notified_to",
                    models.CharField(help_text="A quién se notificó", max_length=200),
                ),
                (
                    "notification_method",
                    models.CharField(help_text="Método de notificación", max_length=50),
                ),
                ("created_datetime", models.DateTimeField(auto_now_add=True)),
                ("notified_datetime", models.DateTimeField(blank=True, null=True)),
                ("acknowledged_datetime", models.DateTimeField(blank=True, null=True)),
                ("resolved_datetime", models.DateTimeField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "acknowledged_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="acknowledged_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "test_result",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="critical_alert",
                        to="laboratory.testresult",
                    ),
                ),
            ],
            options={
                "verbose_name": "Alerta de Valor Crítico",
                "verbose_name_plural": "Alertas de Valores Críticos",
                "db_table": "laboratory_critical_alerts",
                "ordering": ["-created_datetime"],
            },
        ),
        migrations.AlterUniqueTogether(
            name="labtest",
            unique_together={("company", "code")},
        ),
        migrations.CreateModel(
            name="TestPanel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("code", models.CharField(max_length=20)),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "panel_cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "panel_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="test_panels",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tests",
                    models.ManyToManyField(
                        related_name="panels", to="laboratory.labtest"
                    ),
                ),
            ],
            options={
                "verbose_name": "Panel de Pruebas",
                "verbose_name_plural": "Paneles de Pruebas",
                "db_table": "laboratory_test_panels",
                "ordering": ["name"],
                "unique_together": {("company", "code")},
            },
        ),
    ]
