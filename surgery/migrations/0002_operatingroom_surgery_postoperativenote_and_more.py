# Generated by Django 5.1.4 on 2025-10-14 18:22

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0008_usercompanypermission_can_access_billing_health_and_more"),
        ("payroll", "0003_laboratoryspecialty_alter_healthcarerole_category_and_more"),
        ("surgery", "0001_initial"),
        ("third_parties", "0004_thirdparty_birth_date_thirdparty_gender"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="OperatingRoom",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("room_number", models.CharField(max_length=50, unique=True)),
                ("room_name", models.CharField(max_length=200)),
                (
                    "room_type",
                    models.CharField(
                        choices=[
                            ("general", "Cirugía General"),
                            ("specialized", "Cirugía Especializada"),
                            ("trauma", "Sala de Trauma"),
                            ("ambulatory", "Cirugía Ambulatoria"),
                            ("cardiac", "Cirugía Cardíaca"),
                            ("neurosurgery", "Neurocirugía"),
                        ],
                        max_length=30,
                    ),
                ),
                ("floor", models.CharField(blank=True, max_length=50)),
                ("building", models.CharField(blank=True, max_length=100)),
                (
                    "capacity",
                    models.IntegerField(
                        default=1, help_text="Número de mesas quirúrgicas"
                    ),
                ),
                ("has_laminar_flow", models.BooleanField(default=False)),
                ("has_specialized_equipment", models.BooleanField(default=False)),
                ("equipment_description", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("available", "Disponible"),
                            ("in_use", "En Uso"),
                            ("cleaning", "En Limpieza"),
                            ("maintenance", "Mantenimiento"),
                            ("out_of_service", "Fuera de Servicio"),
                        ],
                        default="available",
                        max_length=30,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="operating_rooms_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Sala de Quirófano",
                "verbose_name_plural": "Salas de Quirófano",
                "db_table": "surgery_operating_rooms",
                "ordering": ["room_number"],
            },
        ),
        migrations.CreateModel(
            name="Surgery",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("surgery_number", models.CharField(max_length=50, unique=True)),
                ("scheduled_date", models.DateField()),
                ("scheduled_time", models.TimeField()),
                (
                    "estimated_duration",
                    models.IntegerField(help_text="Duración estimada en minutos"),
                ),
                (
                    "urgency",
                    models.CharField(
                        choices=[
                            ("elective", "Electiva"),
                            ("urgent", "Urgente"),
                            ("emergency", "Emergencia"),
                        ],
                        default="elective",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Programada"),
                            ("confirmed", "Confirmada"),
                            ("in_preparation", "En Preparación"),
                            ("in_progress", "En Curso"),
                            ("completed", "Completada"),
                            ("cancelled", "Cancelada"),
                            ("postponed", "Pospuesta"),
                        ],
                        default="scheduled",
                        max_length=30,
                    ),
                ),
                ("pre_operative_diagnosis", models.CharField(max_length=500)),
                (
                    "pre_operative_diagnosis_code",
                    models.CharField(
                        blank=True, help_text="Código CIE-10", max_length=20
                    ),
                ),
                (
                    "post_operative_diagnosis",
                    models.CharField(blank=True, max_length=500),
                ),
                (
                    "post_operative_diagnosis_code",
                    models.CharField(blank=True, max_length=20),
                ),
                (
                    "surgical_indication",
                    models.TextField(help_text="Indicación quirúrgica"),
                ),
                ("informed_consent_signed", models.BooleanField(default=False)),
                ("pre_anesthetic_evaluation", models.BooleanField(default=False)),
                ("required_blood_units", models.IntegerField(default=0)),
                ("blood_reserved", models.BooleanField(default=False)),
                ("actual_start_time", models.DateTimeField(blank=True, null=True)),
                ("actual_end_time", models.DateTimeField(blank=True, null=True)),
                ("anesthesia_start_time", models.DateTimeField(blank=True, null=True)),
                ("anesthesia_end_time", models.DateTimeField(blank=True, null=True)),
                ("surgical_findings", models.TextField(blank=True)),
                ("surgical_technique", models.TextField(blank=True)),
                ("complications", models.TextField(blank=True)),
                (
                    "surgical_specimen",
                    models.TextField(
                        blank=True, help_text="Especímenes enviados a patología"
                    ),
                ),
                (
                    "estimated_blood_loss",
                    models.IntegerField(
                        blank=True, help_text="Pérdida sanguínea en ml", null=True
                    ),
                ),
                ("transfusion_required", models.BooleanField(default=False)),
                ("units_transfused", models.IntegerField(default=0)),
                (
                    "destination_after_surgery",
                    models.CharField(
                        blank=True,
                        help_text="Ej: UCI, Recuperación, Piso",
                        max_length=100,
                    ),
                ),
                ("post_operative_orders", models.TextField(blank=True)),
                ("notes", models.TextField(blank=True)),
                ("cancellation_reason", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "anesthesiologist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="surgeries_as_anesthesiologist",
                        to="payroll.employee",
                    ),
                ),
                (
                    "assistant_surgeon",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="surgeries_as_assistant",
                        to="payroll.employee",
                    ),
                ),
                (
                    "circulating_nurse",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="surgeries_as_circulating_nurse",
                        to="payroll.employee",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="surgeries_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "operating_room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="surgeries",
                        to="surgery.operatingroom",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="surgeries",
                        to="third_parties.thirdparty",
                    ),
                ),
                (
                    "scrub_nurse",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="surgeries_as_scrub_nurse",
                        to="payroll.employee",
                    ),
                ),
                (
                    "surgeon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="surgeries_as_surgeon",
                        to="payroll.employee",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cirugía",
                "verbose_name_plural": "Cirugías",
                "db_table": "surgeries",
                "ordering": ["-scheduled_date", "-scheduled_time"],
            },
        ),
        migrations.CreateModel(
            name="PostOperativeNote",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "note_datetime",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "patient_condition",
                    models.TextField(
                        help_text="Condición general del paciente al salir de quirófano"
                    ),
                ),
                ("consciousness_level", models.CharField(max_length=200)),
                ("vital_signs_stable", models.BooleanField(default=True)),
                ("blood_pressure_systolic", models.IntegerField()),
                ("blood_pressure_diastolic", models.IntegerField()),
                ("heart_rate", models.IntegerField()),
                ("respiratory_rate", models.IntegerField()),
                ("oxygen_saturation", models.IntegerField()),
                ("temperature", models.DecimalField(decimal_places=1, max_digits=4)),
                (
                    "pain_scale",
                    models.IntegerField(
                        help_text="Escala de dolor 0-10",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                ("analgesic_plan", models.TextField()),
                ("drains_in_place", models.TextField(blank=True)),
                ("catheters_in_place", models.TextField(blank=True)),
                ("diet_orders", models.CharField(max_length=200)),
                ("activity_orders", models.TextField()),
                ("medication_orders", models.TextField()),
                ("laboratory_orders", models.TextField(blank=True)),
                ("imaging_orders", models.TextField(blank=True)),
                ("follow_up_instructions", models.TextField()),
                ("warning_signs", models.TextField(help_text="Signos de alarma")),
                (
                    "next_evaluation_time",
                    models.DateTimeField(help_text="Próxima evaluación médica"),
                ),
                ("observations", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="post_op_notes_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "written_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="post_operative_notes",
                        to="payroll.employee",
                    ),
                ),
                (
                    "surgery",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="post_operative_note",
                        to="surgery.surgery",
                    ),
                ),
            ],
            options={
                "verbose_name": "Nota Post-Operatoria",
                "verbose_name_plural": "Notas Post-Operatorias",
                "db_table": "surgery_post_operative_notes",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AnesthesiaNote",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("pre_anesthetic_evaluation_date", models.DateTimeField()),
                (
                    "asa_classification",
                    models.CharField(
                        choices=[
                            ("I", "ASA I - Paciente sano"),
                            ("II", "ASA II - Enfermedad sistémica leve"),
                            ("III", "ASA III - Enfermedad sistémica grave"),
                            ("IV", "ASA IV - Enfermedad sistémica grave amenazante"),
                            ("V", "ASA V - Paciente moribundo"),
                            ("E", "E - Emergencia"),
                        ],
                        max_length=10,
                    ),
                ),
                ("allergies", models.TextField(blank=True)),
                ("current_medications", models.TextField(blank=True)),
                ("previous_anesthesia", models.TextField(blank=True)),
                ("anesthetic_risk", models.TextField(blank=True)),
                ("fasting_hours", models.IntegerField(help_text="Horas de ayuno")),
                (
                    "pre_weight_kg",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("pre_blood_pressure_systolic", models.IntegerField()),
                ("pre_blood_pressure_diastolic", models.IntegerField()),
                ("pre_heart_rate", models.IntegerField()),
                ("pre_respiratory_rate", models.IntegerField()),
                ("pre_oxygen_saturation", models.IntegerField()),
                (
                    "pre_temperature",
                    models.DecimalField(decimal_places=1, max_digits=4),
                ),
                (
                    "anesthesia_type",
                    models.CharField(
                        choices=[
                            ("general", "Anestesia General"),
                            ("regional", "Anestesia Regional"),
                            ("spinal", "Anestesia Raquídea"),
                            ("epidural", "Anestesia Epidural"),
                            ("combined", "Anestesia Combinada"),
                            ("local", "Anestesia Local"),
                            ("sedation", "Sedación"),
                        ],
                        max_length=30,
                    ),
                ),
                ("anesthetic_technique", models.TextField()),
                ("airway_management", models.CharField(blank=True, max_length=200)),
                ("intubation_details", models.TextField(blank=True)),
                (
                    "medications_administered",
                    models.TextField(help_text="Medicamentos anestésicos y dosis"),
                ),
                (
                    "fluids_administered",
                    models.TextField(help_text="Líquidos IV administrados"),
                ),
                (
                    "monitoring_type",
                    models.TextField(help_text="Tipo de monitoreo utilizado"),
                ),
                (
                    "intra_blood_pressure_min_systolic",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "intra_blood_pressure_max_systolic",
                    models.IntegerField(blank=True, null=True),
                ),
                ("intra_heart_rate_min", models.IntegerField(blank=True, null=True)),
                ("intra_heart_rate_max", models.IntegerField(blank=True, null=True)),
                (
                    "intra_oxygen_saturation_min",
                    models.IntegerField(blank=True, null=True),
                ),
                ("adverse_events", models.TextField(blank=True)),
                ("complications", models.TextField(blank=True)),
                ("emergence_time", models.DateTimeField(blank=True, null=True)),
                ("extubation_time", models.DateTimeField(blank=True, null=True)),
                ("recovery_room_time", models.DateTimeField(blank=True, null=True)),
                ("post_op_orders", models.TextField(blank=True)),
                ("analgesia_plan", models.TextField(blank=True)),
                ("observations", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "anesthesiologist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="anesthesia_notes",
                        to="payroll.employee",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="anesthesia_notes_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "surgery",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="anesthesia_note",
                        to="surgery.surgery",
                    ),
                ),
            ],
            options={
                "verbose_name": "Nota de Anestesia",
                "verbose_name_plural": "Notas de Anestesia",
                "db_table": "surgery_anesthesia_notes",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SurgicalProcedure",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Código CUPS o interno", max_length=50, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=300)),
                (
                    "specialty",
                    models.CharField(
                        choices=[
                            ("general", "Cirugía General"),
                            ("orthopedics", "Ortopedia"),
                            ("neurosurgery", "Neurocirugía"),
                            ("cardiac", "Cirugía Cardíaca"),
                            ("vascular", "Cirugía Vascular"),
                            ("plastic", "Cirugía Plástica"),
                            ("gynecology", "Ginecología"),
                            ("urology", "Urología"),
                            ("ophthalmology", "Oftalmología"),
                            ("ent", "Otorrinolaringología"),
                            ("thoracic", "Cirugía Torácica"),
                            ("pediatric", "Cirugía Pediátrica"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "complexity",
                    models.CharField(
                        choices=[
                            ("low", "Baja Complejidad"),
                            ("medium", "Mediana Complejidad"),
                            ("high", "Alta Complejidad"),
                            ("very_high", "Muy Alta Complejidad"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "estimated_duration_minutes",
                    models.IntegerField(help_text="Duración estimada en minutos"),
                ),
                (
                    "requires_icu",
                    models.BooleanField(default=False, verbose_name="Requiere UCI"),
                ),
                (
                    "requires_blood_bank",
                    models.BooleanField(
                        default=False, verbose_name="Requiere Banco de Sangre"
                    ),
                ),
                ("requires_specialized_equipment", models.BooleanField(default=False)),
                ("equipment_needed", models.TextField(blank=True)),
                ("pre_operative_instructions", models.TextField(blank=True)),
                ("post_operative_instructions", models.TextField(blank=True)),
                (
                    "base_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="surgical_procedures_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Procedimiento Quirúrgico",
                "verbose_name_plural": "Procedimientos Quirúrgicos",
                "db_table": "surgery_procedures",
                "ordering": ["specialty", "name"],
            },
        ),
        migrations.AddField(
            model_name="surgery",
            name="surgical_procedure",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="surgeries",
                to="surgery.surgicalprocedure",
            ),
        ),
        migrations.CreateModel(
            name="SurgicalSupply",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "supply_type",
                    models.CharField(
                        choices=[
                            ("suture", "Material de Sutura"),
                            ("implant", "Implante"),
                            ("prosthesis", "Prótesis"),
                            ("mesh", "Malla"),
                            ("drainage", "Drenaje"),
                            ("catheter", "Catéter"),
                            ("medication", "Medicamento"),
                            ("disposable", "Material Desechable"),
                            ("other", "Otro"),
                        ],
                        max_length=30,
                    ),
                ),
                ("name", models.CharField(max_length=300)),
                ("description", models.TextField(blank=True)),
                ("quantity", models.IntegerField(default=1)),
                ("unit", models.CharField(default="unidad", max_length=50)),
                ("lot_number", models.CharField(blank=True, max_length=100)),
                ("serial_number", models.CharField(blank=True, max_length=100)),
                ("expiration_date", models.DateField(blank=True, null=True)),
                ("manufacturer", models.CharField(blank=True, max_length=200)),
                (
                    "unit_cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.company"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="surgical_supplies_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "surgery",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supplies_used",
                        to="surgery.surgery",
                    ),
                ),
            ],
            options={
                "verbose_name": "Insumo Quirúrgico",
                "verbose_name_plural": "Insumos Quirúrgicos",
                "db_table": "surgery_supplies",
                "ordering": ["-created_at"],
            },
        ),
        migrations.DeleteModel(
            name="SurgeryModule",
        ),
    ]
