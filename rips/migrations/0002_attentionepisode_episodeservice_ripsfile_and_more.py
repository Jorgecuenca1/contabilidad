# Generated by Django 5.1.4 on 2025-10-16 01:58

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("billing_health", "0003_healthinvoiceitem_content_type_and_more"),
        ("contenttypes", "0002_remove_content_type_name"),
        ("core", "0008_usercompanypermission_can_access_billing_health_and_more"),
        (
            "hospitalization",
            "0002_admission_admissionserviceitem_bed_admissiontransfer_and_more",
        ),
        ("patients", "0001_initial"),
        ("rips", "0001_initial"),
        ("third_parties", "0004_thirdparty_birth_date_thirdparty_gender"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AttentionEpisode",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "episode_number",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Número de Episodio"
                    ),
                ),
                (
                    "episode_type",
                    models.CharField(
                        choices=[
                            ("ambulatory", "Ambulatorio/Consulta Externa"),
                            ("emergency", "Urgencias"),
                            ("hospitalization", "Hospitalización"),
                            ("home_care", "Atención Domiciliaria"),
                            ("surgery", "Cirugía Programada"),
                            ("telemedicine", "Telemedicina"),
                        ],
                        max_length=20,
                        verbose_name="Tipo de Episodio",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Activo - En Atención"),
                            ("closed", "Cerrado - Listo para Facturar"),
                            ("billed", "Facturado"),
                            ("cancelled", "Cancelado"),
                        ],
                        default="active",
                        max_length=20,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "admission_date",
                    models.DateTimeField(
                        help_text="Inicio del episodio de atención",
                        verbose_name="Fecha/Hora de Admisión",
                    ),
                ),
                (
                    "discharge_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Cierre del episodio de atención",
                        null=True,
                        verbose_name="Fecha/Hora de Egreso",
                    ),
                ),
                (
                    "admission_diagnosis",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        verbose_name="Diagnóstico de Ingreso (CIE-10)",
                    ),
                ),
                (
                    "discharge_diagnosis",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        verbose_name="Diagnóstico de Egreso (CIE-10)",
                    ),
                ),
                (
                    "authorization_number",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        verbose_name="Número de Autorización EPS",
                    ),
                ),
                (
                    "total_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="Costo Total del Episodio",
                    ),
                ),
                (
                    "is_billed",
                    models.BooleanField(default=False, verbose_name="Facturado"),
                ),
                (
                    "billing_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha de Facturación"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Observaciones")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "admission",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="episode",
                        to="hospitalization.admission",
                        verbose_name="Admisión Hospitalaria Relacionada",
                    ),
                ),
                (
                    "closed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="episodes_closed",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attention_episodes",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="episodes_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "invoice",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="episode",
                        to="billing_health.healthinvoice",
                        verbose_name="Factura Generada",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="attention_episodes",
                        to="patients.patient",
                        verbose_name="Paciente",
                    ),
                ),
                (
                    "payer",
                    models.ForeignKey(
                        help_text="Entidad responsable del pago",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="attention_episodes_as_payer",
                        to="third_parties.thirdparty",
                        verbose_name="Pagador (EPS)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Episodio de Atención",
                "verbose_name_plural": "Episodios de Atención",
                "ordering": ["-admission_date"],
            },
        ),
        migrations.CreateModel(
            name="EpisodeService",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "service_type",
                    models.CharField(
                        choices=[
                            ("consultation", "Consulta"),
                            ("procedure", "Procedimiento"),
                            ("medication", "Medicamento"),
                            ("laboratory", "Laboratorio"),
                            ("imaging", "Imágenes Diagnósticas"),
                            ("hospitalization", "Hospitalización"),
                            ("surgery", "Cirugía"),
                            ("other", "Otro Servicio"),
                        ],
                        max_length=20,
                        verbose_name="Tipo de Servicio",
                    ),
                ),
                ("object_id", models.UUIDField()),
                (
                    "service_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="Costo del Servicio",
                    ),
                ),
                ("added_at", models.DateTimeField(auto_now_add=True)),
                (
                    "added_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="episode_services_added",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "episode",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="services",
                        to="rips.attentionepisode",
                    ),
                ),
            ],
            options={
                "verbose_name": "Servicio del Episodio",
                "verbose_name_plural": "Servicios del Episodio",
                "ordering": ["added_at"],
            },
        ),
        migrations.CreateModel(
            name="RIPSFile",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "file_number",
                    models.CharField(
                        max_length=50,
                        unique=True,
                        verbose_name="Número de Archivo RIPS",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Borrador"),
                            ("generated", "Generado"),
                            ("sent", "Enviado a EPS"),
                            ("accepted", "Aceptado"),
                            ("rejected", "Rechazado"),
                            ("glosa", "Con Glosa"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="Estado",
                    ),
                ),
                ("period_start", models.DateField(verbose_name="Inicio del Periodo")),
                ("period_end", models.DateField(verbose_name="Fin del Periodo")),
                (
                    "provider_nit",
                    models.CharField(
                        help_text="NIT de la IPS que presta los servicios",
                        max_length=20,
                        verbose_name="NIT del Prestador",
                    ),
                ),
                (
                    "provider_code",
                    models.CharField(
                        blank=True,
                        help_text="Código de habilitación de la IPS",
                        max_length=20,
                        verbose_name="Código de Habilitación",
                    ),
                ),
                (
                    "file_format",
                    models.CharField(
                        choices=[
                            ("json", "JSON (Moderno)"),
                            ("txt", "TXT (Pipe-delimited)"),
                            ("xml", "XML"),
                        ],
                        default="json",
                        max_length=10,
                        verbose_name="Formato del Archivo",
                    ),
                ),
                (
                    "json_file_path",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="Ruta Archivo JSON"
                    ),
                ),
                (
                    "txt_file_path",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="Ruta Archivo TXT"
                    ),
                ),
                (
                    "xml_file_path",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="Ruta Archivo XML"
                    ),
                ),
                (
                    "total_invoices",
                    models.IntegerField(default=0, verbose_name="Total Facturas"),
                ),
                (
                    "total_patients",
                    models.IntegerField(default=0, verbose_name="Total Pacientes"),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="Valor Total",
                    ),
                ),
                (
                    "sent_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha de Envío"
                    ),
                ),
                (
                    "sent_to",
                    models.CharField(
                        blank=True,
                        help_text="EPS/Entidad destinataria",
                        max_length=200,
                        verbose_name="Enviado a",
                    ),
                ),
                (
                    "response_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha de Respuesta"
                    ),
                ),
                (
                    "response_file_path",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="Archivo de Respuesta"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Observaciones")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "generated_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha de Generación"
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rips_files",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="rips_files_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "generated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="rips_files_generated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Archivo RIPS",
                "verbose_name_plural": "Archivos RIPS",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RIPSTransaction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "note_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            (None, "N/A - Factura Normal"),
                            ("debit", "Nota Débito"),
                            ("credit", "Nota Crédito"),
                        ],
                        max_length=10,
                        null=True,
                        verbose_name="Tipo de Nota",
                    ),
                ),
                (
                    "note_number",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Número de Nota"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="rips_transactions",
                        to="billing_health.healthinvoice",
                    ),
                ),
                (
                    "rips_file",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="rips.ripsfile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Transacción RIPS",
                "verbose_name_plural": "Transacciones RIPS",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="RIPSProcedimiento",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "cod_prestador",
                    models.CharField(max_length=20, verbose_name="Código Prestador"),
                ),
                (
                    "fecha_inicio_atencion",
                    models.DateTimeField(verbose_name="Fecha/Hora Inicio Atención"),
                ),
                (
                    "id_mipres",
                    models.CharField(
                        blank=True,
                        help_text="Para medicamentos de alto costo",
                        max_length=50,
                        verbose_name="ID MIPRES",
                    ),
                ),
                (
                    "num_autorizacion",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Número de Autorización"
                    ),
                ),
                (
                    "cod_procedimiento",
                    models.CharField(
                        max_length=20, verbose_name="Código Procedimiento (CUPS)"
                    ),
                ),
                (
                    "via_ingreso_servicio_salud",
                    models.CharField(
                        help_text="01=Consulta Externa, 02=Urgencias, 03=Hospitalización, 04=Nacido en Institución",
                        max_length=2,
                        verbose_name="Vía de Ingreso",
                    ),
                ),
                (
                    "modalidad_grupo_servicio_tec_sal",
                    models.CharField(
                        max_length=2, verbose_name="Modalidad Grupo Servicio"
                    ),
                ),
                (
                    "grupo_servicios",
                    models.CharField(max_length=2, verbose_name="Grupo de Servicios"),
                ),
                (
                    "cod_servicio",
                    models.IntegerField(verbose_name="Código del Servicio"),
                ),
                (
                    "finalidad_tecnologia_salud",
                    models.CharField(
                        max_length=2, verbose_name="Finalidad Tecnología Salud"
                    ),
                ),
                (
                    "tipo_documento_identificacion",
                    models.CharField(
                        max_length=2, verbose_name="Tipo Documento Profesional"
                    ),
                ),
                (
                    "num_documento_identificacion",
                    models.CharField(
                        max_length=20, verbose_name="Número Documento Profesional"
                    ),
                ),
                (
                    "cod_diagnostico_principal",
                    models.CharField(
                        max_length=10, verbose_name="Diagnóstico Principal"
                    ),
                ),
                (
                    "cod_diagnostico_relacionado",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        verbose_name="Diagnóstico Relacionado",
                    ),
                ),
                (
                    "cod_complicacion",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Complicación"
                    ),
                ),
                (
                    "vr_servicio",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=15,
                        verbose_name="Valor del Servicio",
                    ),
                ),
                (
                    "concepto_recaudo",
                    models.CharField(max_length=2, verbose_name="Concepto de Recaudo"),
                ),
                (
                    "valor_pago_moderador",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="Valor Pago Moderador",
                    ),
                ),
                (
                    "num_fev_pago_moderador",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        verbose_name="Número FEV Pago Moderador",
                    ),
                ),
                ("consecutivo", models.IntegerField(verbose_name="Consecutivo")),
                (
                    "transaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="procedimientos",
                        to="rips.ripstransaction",
                    ),
                ),
            ],
            options={
                "verbose_name": "RIPS Procedimiento",
                "verbose_name_plural": "RIPS Procedimientos",
                "ordering": ["consecutivo"],
            },
        ),
        migrations.CreateModel(
            name="RIPSOtrosServicios",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "cod_prestador",
                    models.CharField(max_length=20, verbose_name="Código Prestador"),
                ),
                (
                    "num_autorizacion",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Número de Autorización"
                    ),
                ),
                (
                    "id_mipres",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="ID MIPRES"
                    ),
                ),
                (
                    "fecha_suministro_tecnologia",
                    models.DateTimeField(verbose_name="Fecha Suministro"),
                ),
                (
                    "tipo_os",
                    models.CharField(
                        help_text="01=Insumo, 02=Dispositivo, 03=Prótesis, 04=Órtesis",
                        max_length=2,
                        verbose_name="Tipo Otro Servicio",
                    ),
                ),
                (
                    "cod_tecnologia_salud",
                    models.CharField(
                        max_length=50, verbose_name="Código Tecnología Salud"
                    ),
                ),
                (
                    "nom_tecnologia_salud",
                    models.CharField(max_length=500, verbose_name="Nombre Tecnología"),
                ),
                (
                    "cantidad_os",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Cantidad"
                    ),
                ),
                (
                    "tipo_documento_identificacion",
                    models.CharField(
                        max_length=2, verbose_name="Tipo Documento Paciente"
                    ),
                ),
                (
                    "num_documento_identificacion",
                    models.CharField(
                        max_length=20, verbose_name="Número Documento Paciente"
                    ),
                ),
                (
                    "vr_unit_os",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Valor Unitario"
                    ),
                ),
                (
                    "vr_servicio",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Valor Total"
                    ),
                ),
                (
                    "concepto_recaudo",
                    models.CharField(max_length=2, verbose_name="Concepto de Recaudo"),
                ),
                (
                    "valor_pago_moderador",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="Valor Pago Moderador",
                    ),
                ),
                (
                    "num_fev_pago_moderador",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        verbose_name="Número FEV Pago Moderador",
                    ),
                ),
                ("consecutivo", models.IntegerField(verbose_name="Consecutivo")),
                (
                    "transaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="otros_servicios",
                        to="rips.ripstransaction",
                    ),
                ),
            ],
            options={
                "verbose_name": "RIPS Otro Servicio",
                "verbose_name_plural": "RIPS Otros Servicios",
                "ordering": ["consecutivo"],
            },
        ),
        migrations.CreateModel(
            name="RIPSMedicamento",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "cod_prestador",
                    models.CharField(max_length=20, verbose_name="Código Prestador"),
                ),
                (
                    "num_autorizacion",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Número de Autorización"
                    ),
                ),
                (
                    "id_mipres",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="ID MIPRES"
                    ),
                ),
                (
                    "fecha_dispens_admon",
                    models.DateTimeField(
                        verbose_name="Fecha Dispensación/Administración"
                    ),
                ),
                (
                    "cod_diagnostico_principal",
                    models.CharField(
                        max_length=10, verbose_name="Diagnóstico Principal"
                    ),
                ),
                (
                    "cod_diagnostico_relacionado",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        verbose_name="Diagnóstico Relacionado",
                    ),
                ),
                (
                    "tipo_medicamento",
                    models.CharField(
                        help_text="01=POS, 02=No POS",
                        max_length=2,
                        verbose_name="Tipo Medicamento",
                    ),
                ),
                (
                    "cod_tecnologia_salud",
                    models.CharField(
                        help_text="Código CUM o ATC",
                        max_length=50,
                        verbose_name="Código Tecnología Salud",
                    ),
                ),
                (
                    "nom_tecnologia_salud",
                    models.CharField(max_length=500, verbose_name="Nombre Medicamento"),
                ),
                (
                    "concentracion_medicamento",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Concentración",
                    ),
                ),
                ("unidad_medida", models.IntegerField(verbose_name="Unidad de Medida")),
                (
                    "forma_farmaceutica",
                    models.CharField(max_length=20, verbose_name="Forma Farmacéutica"),
                ),
                (
                    "unidad_min_dispensa",
                    models.IntegerField(verbose_name="Unidad Mínima Dispensación"),
                ),
                (
                    "cantidad_medicamento",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Cantidad Medicamento",
                    ),
                ),
                (
                    "dias_tratamiento",
                    models.IntegerField(verbose_name="Días de Tratamiento"),
                ),
                (
                    "tipo_documento_identificacion",
                    models.CharField(
                        max_length=2, verbose_name="Tipo Documento Paciente"
                    ),
                ),
                (
                    "num_documento_identificacion",
                    models.CharField(
                        max_length=20, verbose_name="Número Documento Paciente"
                    ),
                ),
                (
                    "vr_unit_medicamento",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Valor Unitario"
                    ),
                ),
                (
                    "vr_servicio",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Valor Total"
                    ),
                ),
                (
                    "concepto_recaudo",
                    models.CharField(max_length=2, verbose_name="Concepto de Recaudo"),
                ),
                (
                    "valor_pago_moderador",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="Valor Pago Moderador",
                    ),
                ),
                (
                    "num_fev_pago_moderador",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        verbose_name="Número FEV Pago Moderador",
                    ),
                ),
                ("consecutivo", models.IntegerField(verbose_name="Consecutivo")),
                (
                    "transaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="medicamentos",
                        to="rips.ripstransaction",
                    ),
                ),
            ],
            options={
                "verbose_name": "RIPS Medicamento",
                "verbose_name_plural": "RIPS Medicamentos",
                "ordering": ["consecutivo"],
            },
        ),
        migrations.CreateModel(
            name="RIPSConsulta",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "cod_prestador",
                    models.CharField(max_length=20, verbose_name="Código Prestador"),
                ),
                (
                    "fecha_inicio_atencion",
                    models.DateTimeField(verbose_name="Fecha/Hora Inicio Atención"),
                ),
                (
                    "num_autorizacion",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Número de Autorización"
                    ),
                ),
                (
                    "cod_consulta",
                    models.CharField(
                        max_length=20, verbose_name="Código Consulta (CUPS)"
                    ),
                ),
                (
                    "modalidad_grupo_servicio_tec_sal",
                    models.CharField(
                        help_text="01=Intramural, 02=Extramural",
                        max_length=2,
                        verbose_name="Modalidad Grupo Servicio",
                    ),
                ),
                (
                    "grupo_servicios",
                    models.CharField(
                        help_text="01=Consulta Externa, 02=Apoyo Diagnóstico, etc.",
                        max_length=2,
                        verbose_name="Grupo de Servicios",
                    ),
                ),
                (
                    "cod_servicio",
                    models.IntegerField(verbose_name="Código del Servicio"),
                ),
                (
                    "finalidad_tecnologia_salud",
                    models.CharField(
                        help_text="01=Diagnóstico, 02=Tratamiento, etc.",
                        max_length=2,
                        verbose_name="Finalidad Tecnología Salud",
                    ),
                ),
                (
                    "causa_motivo_atencion",
                    models.CharField(
                        help_text="01=Accidente de trabajo, 02=Accidente tránsito, etc.",
                        max_length=2,
                        verbose_name="Causa Externa",
                    ),
                ),
                (
                    "cod_diagnostico_principal",
                    models.CharField(
                        max_length=10, verbose_name="Diagnóstico Principal"
                    ),
                ),
                (
                    "cod_diagnostico_relacionado1",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        verbose_name="Diagnóstico Relacionado 1",
                    ),
                ),
                (
                    "cod_diagnostico_relacionado2",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        verbose_name="Diagnóstico Relacionado 2",
                    ),
                ),
                (
                    "cod_diagnostico_relacionado3",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        verbose_name="Diagnóstico Relacionado 3",
                    ),
                ),
                (
                    "tipo_diagnostico_principal",
                    models.CharField(
                        help_text="01=Impresión Diagnóstica, 02=Confirmado Nuevo, 03=Confirmado Repetido",
                        max_length=2,
                        verbose_name="Tipo Diagnóstico",
                    ),
                ),
                (
                    "tipo_documento_identificacion",
                    models.CharField(
                        max_length=2, verbose_name="Tipo Documento Profesional"
                    ),
                ),
                (
                    "num_documento_identificacion",
                    models.CharField(
                        max_length=20, verbose_name="Número Documento Profesional"
                    ),
                ),
                (
                    "vr_servicio",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=15,
                        verbose_name="Valor del Servicio",
                    ),
                ),
                (
                    "concepto_recaudo",
                    models.CharField(
                        help_text="01=Copago, 02=Cuota moderadora, etc.",
                        max_length=2,
                        verbose_name="Concepto de Recaudo",
                    ),
                ),
                (
                    "valor_pago_moderador",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="Valor Pago Moderador",
                    ),
                ),
                (
                    "num_fev_pago_moderador",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        verbose_name="Número FEV Pago Moderador",
                    ),
                ),
                ("consecutivo", models.IntegerField(verbose_name="Consecutivo")),
                (
                    "transaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="consultas",
                        to="rips.ripstransaction",
                    ),
                ),
            ],
            options={
                "verbose_name": "RIPS Consulta",
                "verbose_name_plural": "RIPS Consultas",
                "ordering": ["consecutivo"],
            },
        ),
        migrations.CreateModel(
            name="RIPSUsuario",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "tipo_documento_identificacion",
                    models.CharField(
                        help_text="CC, TI, CE, PA, RC, MS, AS, CD, etc.",
                        max_length=2,
                        verbose_name="Tipo Documento",
                    ),
                ),
                (
                    "num_documento_identificacion",
                    models.CharField(max_length=20, verbose_name="Número Documento"),
                ),
                (
                    "tipo_usuario",
                    models.CharField(
                        help_text="01=Contributivo, 02=Subsidiado, 03=Vinculado, 04=Particular, etc.",
                        max_length=2,
                        verbose_name="Tipo de Usuario",
                    ),
                ),
                (
                    "fecha_nacimiento",
                    models.DateField(verbose_name="Fecha de Nacimiento"),
                ),
                (
                    "cod_sexo",
                    models.CharField(
                        help_text="M o F", max_length=1, verbose_name="Sexo"
                    ),
                ),
                (
                    "cod_pais_residencia",
                    models.CharField(
                        max_length=3, verbose_name="Código País Residencia"
                    ),
                ),
                (
                    "cod_municipio_residencia",
                    models.CharField(
                        max_length=5, verbose_name="Código Municipio Residencia"
                    ),
                ),
                (
                    "cod_zona_territorial_residencia",
                    models.CharField(
                        help_text="01=Urbana, 02=Rural",
                        max_length=2,
                        verbose_name="Zona Territorial",
                    ),
                ),
                (
                    "incapacidad",
                    models.CharField(
                        help_text="SI o NO", max_length=2, verbose_name="Incapacidad"
                    ),
                ),
                ("consecutivo", models.IntegerField(verbose_name="Consecutivo")),
                (
                    "cod_pais_origen",
                    models.CharField(max_length=3, verbose_name="Código País Origen"),
                ),
                (
                    "transaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usuarios",
                        to="rips.ripstransaction",
                    ),
                ),
            ],
            options={
                "verbose_name": "RIPS Usuario",
                "verbose_name_plural": "RIPS Usuarios",
                "ordering": ["consecutivo"],
            },
        ),
        migrations.DeleteModel(
            name="RipsModule",
        ),
        migrations.AddIndex(
            model_name="attentionepisode",
            index=models.Index(
                fields=["episode_number"], name="rips_attent_episode_0d1324_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attentionepisode",
            index=models.Index(
                fields=["patient", "status"], name="rips_attent_patient_904005_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attentionepisode",
            index=models.Index(
                fields=["admission_date"], name="rips_attent_admissi_11f30f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attentionepisode",
            index=models.Index(fields=["status"], name="rips_attent_status_b039ad_idx"),
        ),
        migrations.AddIndex(
            model_name="episodeservice",
            index=models.Index(
                fields=["episode", "service_type"],
                name="rips_episod_episode_0bc051_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="episodeservice",
            index=models.Index(
                fields=["content_type", "object_id"],
                name="rips_episod_content_25b450_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="ripsfile",
            index=models.Index(
                fields=["file_number"], name="rips_ripsfi_file_nu_6fcbd8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="ripsfile",
            index=models.Index(fields=["status"], name="rips_ripsfi_status_178212_idx"),
        ),
        migrations.AddIndex(
            model_name="ripsfile",
            index=models.Index(
                fields=["period_start", "period_end"],
                name="rips_ripsfi_period__f0e83b_idx",
            ),
        ),
    ]
