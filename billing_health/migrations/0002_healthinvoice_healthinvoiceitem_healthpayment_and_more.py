# Generated by Django 5.1.4 on 2025-10-14 21:59

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("billing_health", "0001_initial"),
        ("core", "0008_usercompanypermission_can_access_billing_health_and_more"),
        ("third_parties", "0004_thirdparty_birth_date_thirdparty_gender"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="HealthInvoice",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "invoice_number",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Número de Factura"
                    ),
                ),
                (
                    "invoice_prefix",
                    models.CharField(blank=True, max_length=10, verbose_name="Prefijo"),
                ),
                (
                    "consecutive_number",
                    models.IntegerField(verbose_name="Número Consecutivo"),
                ),
                (
                    "dian_resolution",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Resolución DIAN"
                    ),
                ),
                (
                    "dian_resolution_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha Resolución DIAN"
                    ),
                ),
                (
                    "authorized_range_from",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Rango Autorizado Desde"
                    ),
                ),
                (
                    "authorized_range_to",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Rango Autorizado Hasta"
                    ),
                ),
                ("invoice_date", models.DateField(verbose_name="Fecha de Factura")),
                (
                    "service_date_from",
                    models.DateField(verbose_name="Fecha Inicio Servicios"),
                ),
                (
                    "service_date_to",
                    models.DateField(verbose_name="Fecha Fin Servicios"),
                ),
                (
                    "due_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de Vencimiento"
                    ),
                ),
                (
                    "invoice_type",
                    models.CharField(
                        choices=[
                            ("ambulatory", "Consulta Externa/Ambulatoria"),
                            ("hospitalization", "Hospitalización"),
                            ("urgency", "Urgencias"),
                            ("medication", "Medicamentos"),
                            ("procedure", "Procedimientos"),
                            ("mixed", "Mixta"),
                        ],
                        max_length=20,
                        verbose_name="Tipo de Factura",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Borrador"),
                            ("issued", "Emitida"),
                            ("sent", "Enviada a Pagador"),
                            ("glosa", "Glosada"),
                            ("glosa_response", "Respuesta a Glosa"),
                            ("partial_payment", "Pago Parcial"),
                            ("paid", "Pagada"),
                            ("cancelled", "Anulada"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "contract_number",
                    models.CharField(
                        blank=True,
                        help_text="Contrato con la EPS/Pagador",
                        max_length=50,
                        verbose_name="Número de Contrato",
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        choices=[("contado", "Contado"), ("credito", "Crédito")],
                        default="credito",
                        max_length=20,
                        verbose_name="Forma de Pago",
                    ),
                ),
                (
                    "payment_terms_days",
                    models.IntegerField(
                        default=30, verbose_name="Plazo de Pago (días)"
                    ),
                ),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Subtotal",
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Descuento",
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="IVA",
                    ),
                ),
                (
                    "copayment_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Copago del paciente",
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Copago",
                    ),
                ),
                (
                    "moderator_fee_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Cuota Moderadora",
                    ),
                ),
                (
                    "total",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Total",
                    ),
                ),
                (
                    "paid_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Monto Pagado",
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="Saldo Pendiente",
                    ),
                ),
                (
                    "rips_generated",
                    models.BooleanField(default=False, verbose_name="RIPS Generados"),
                ),
                (
                    "rips_generation_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha Generación RIPS"
                    ),
                ),
                (
                    "rips_file_path",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="Ruta Archivo RIPS"
                    ),
                ),
                (
                    "has_glosa",
                    models.BooleanField(default=False, verbose_name="Tiene Glosa"),
                ),
                (
                    "glosa_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="Monto Glosado",
                    ),
                ),
                (
                    "glosa_notes",
                    models.TextField(blank=True, verbose_name="Observaciones Glosa"),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Observaciones")),
                (
                    "internal_notes",
                    models.TextField(
                        blank=True,
                        help_text="Notas privadas no visibles en la factura",
                        verbose_name="Notas Internas",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="health_invoices_approved",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="health_invoices",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="health_invoices_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="health_invoices_as_patient",
                        to="third_parties.thirdparty",
                        verbose_name="Paciente",
                    ),
                ),
                (
                    "payer",
                    models.ForeignKey(
                        help_text="Entidad responsable del pago",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="health_invoices_as_payer",
                        to="third_parties.thirdparty",
                        verbose_name="Pagador (EPS/Aseguradora)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Factura de Salud",
                "verbose_name_plural": "Facturas de Salud",
                "ordering": ["-invoice_date", "-consecutive_number"],
            },
        ),
        migrations.CreateModel(
            name="HealthInvoiceItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "service_type",
                    models.CharField(
                        choices=[
                            ("consultation", "Consulta"),
                            ("procedure", "Procedimiento"),
                            ("medication", "Medicamento"),
                            ("laboratory", "Laboratorio"),
                            ("imaging", "Imágenes Diagnósticas"),
                            ("hospitalization", "Hospitalización"),
                            ("surgery", "Cirugía"),
                            ("other", "Otro Servicio"),
                        ],
                        max_length=20,
                        verbose_name="Tipo de Servicio",
                    ),
                ),
                (
                    "service_code",
                    models.CharField(
                        help_text="Código CUPS, ATC, etc.",
                        max_length=20,
                        verbose_name="Código del Servicio",
                    ),
                ),
                (
                    "service_name",
                    models.CharField(
                        max_length=500, verbose_name="Descripción del Servicio"
                    ),
                ),
                ("service_date", models.DateField(verbose_name="Fecha del Servicio")),
                (
                    "diagnosis_code",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        verbose_name="Código Diagnóstico CIE-10",
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2,
                        default=1,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Cantidad",
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Valor Unitario",
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="Valor Total",
                    ),
                ),
                (
                    "tax_rate",
                    models.DecimalField(
                        decimal_places=2, default=0, max_digits=5, verbose_name="% IVA"
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="Valor IVA",
                    ),
                ),
                (
                    "copayment",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="Copago",
                    ),
                ),
                (
                    "moderator_fee",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="Cuota Moderadora",
                    ),
                ),
                (
                    "authorization_number",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Número de Autorización"
                    ),
                ),
                (
                    "is_glosa",
                    models.BooleanField(default=False, verbose_name="Glosado"),
                ),
                (
                    "glosa_reason",
                    models.TextField(blank=True, verbose_name="Motivo de Glosa"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="billing_health.healthinvoice",
                    ),
                ),
            ],
            options={
                "verbose_name": "Item de Factura de Salud",
                "verbose_name_plural": "Items de Facturas de Salud",
                "ordering": ["service_date", "service_code"],
            },
        ),
        migrations.CreateModel(
            name="HealthPayment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "payment_number",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Número de Pago"
                    ),
                ),
                ("payment_date", models.DateField(verbose_name="Fecha de Pago")),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("cash", "Efectivo"),
                            ("check", "Cheque"),
                            ("transfer", "Transferencia"),
                            ("credit_card", "Tarjeta de Crédito"),
                            ("debit_card", "Tarjeta Débito"),
                            ("compensation", "Compensación"),
                        ],
                        max_length=20,
                        verbose_name="Método de Pago",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Monto Pagado",
                    ),
                ),
                (
                    "reference_number",
                    models.CharField(
                        blank=True,
                        help_text="Número de cheque, transferencia, etc.",
                        max_length=100,
                        verbose_name="Número de Referencia",
                    ),
                ),
                (
                    "discount_applied",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="Descuento Aplicado",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Observaciones")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="health_payments",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="health_payments_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="payments",
                        to="billing_health.healthinvoice",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pago de Factura de Salud",
                "verbose_name_plural": "Pagos de Facturas de Salud",
                "ordering": ["-payment_date"],
            },
        ),
        migrations.CreateModel(
            name="HealthTariff",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=200, verbose_name="Nombre del Tarifario"
                    ),
                ),
                (
                    "tariff_type",
                    models.CharField(
                        choices=[
                            ("soat", "SOAT"),
                            ("iss_2001", "ISS 2001"),
                            ("iss_2004", "ISS 2004"),
                            ("particular", "Particular"),
                            ("capita", "Capitado"),
                            ("evento", "Evento"),
                            ("paquete", "Paquete"),
                        ],
                        max_length=20,
                        verbose_name="Tipo de Tarifario",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Descripción"),
                ),
                (
                    "base_year",
                    models.IntegerField(
                        default=2024,
                        help_text="Año base del tarifario",
                        verbose_name="Año Base",
                    ),
                ),
                (
                    "uvr_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Valor de la Unidad de Valor Relativo",
                        max_digits=12,
                        verbose_name="Valor UVR",
                    ),
                ),
                (
                    "smmlv_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Salario Mínimo Mensual Legal Vigente",
                        max_digits=12,
                        verbose_name="Valor SMMLV",
                    ),
                ),
                (
                    "global_increment_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Porcentaje de incremento o descuento sobre el tarifario base",
                        max_digits=5,
                        verbose_name="% Incremento Global",
                    ),
                ),
                ("valid_from", models.DateField(verbose_name="Válido Desde")),
                (
                    "valid_until",
                    models.DateField(
                        blank=True, null=True, verbose_name="Válido Hasta"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Activo")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="health_tariffs",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="tariffs_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Tarifario de Salud",
                "verbose_name_plural": "Tarifarios de Salud",
                "ordering": ["-created_at"],
                "unique_together": {("company", "name")},
            },
        ),
        migrations.AddField(
            model_name="healthinvoice",
            name="tariff",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="billing_health.healthtariff",
                verbose_name="Tarifario Aplicado",
            ),
        ),
        migrations.CreateModel(
            name="InvoiceGlosa",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "glosa_number",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Número de Glosa"
                    ),
                ),
                ("glosa_date", models.DateField(verbose_name="Fecha de Glosa")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendiente"),
                            ("in_review", "En Revisión"),
                            ("accepted", "Aceptada"),
                            ("rejected", "Rechazada"),
                            ("partially_accepted", "Parcialmente Aceptada"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "glosa_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Monto Glosado",
                    ),
                ),
                (
                    "accepted_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="Monto Aceptado",
                    ),
                ),
                ("reason", models.TextField(verbose_name="Motivo de la Glosa")),
                (
                    "response",
                    models.TextField(blank=True, verbose_name="Respuesta a la Glosa"),
                ),
                (
                    "response_deadline",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha Límite de Respuesta"
                    ),
                ),
                (
                    "response_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de Respuesta"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invoice_glosas",
                        to="core.company",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="glosas_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="glosas",
                        to="billing_health.healthinvoice",
                    ),
                ),
            ],
            options={
                "verbose_name": "Glosa de Factura",
                "verbose_name_plural": "Glosas de Facturas",
                "ordering": ["-glosa_date"],
            },
        ),
        migrations.DeleteModel(
            name="Billing_healthModule",
        ),
        migrations.AddIndex(
            model_name="healthinvoice",
            index=models.Index(
                fields=["invoice_number"], name="billing_hea_invoice_4915b6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="healthinvoice",
            index=models.Index(fields=["status"], name="billing_hea_status_c15a2e_idx"),
        ),
        migrations.AddIndex(
            model_name="healthinvoice",
            index=models.Index(
                fields=["invoice_date"], name="billing_hea_invoice_a56502_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="healthinvoice",
            index=models.Index(
                fields=["payer", "status"], name="billing_hea_payer_i_7c05eb_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="healthinvoice",
            unique_together={("company", "invoice_number")},
        ),
    ]
